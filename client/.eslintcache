[{"/Users/sristichowdhury/Desktop/projects/stack-hack/client/src/index.js":"1","/Users/sristichowdhury/Desktop/projects/stack-hack/client/src/App.js":"2","/Users/sristichowdhury/Desktop/projects/stack-hack/client/src/reportWebVitals.js":"3","/Users/sristichowdhury/Desktop/projects/stack-hack/client/src/reducer.js":"4","/Users/sristichowdhury/Desktop/projects/stack-hack/client/src/components/Navbar/Navbar.jsx":"5","/Users/sristichowdhury/Desktop/projects/stack-hack/client/src/components/auth/Login/Login.jsx":"6","/Users/sristichowdhury/Desktop/projects/stack-hack/client/src/components/auth/Signup/Signup.jsx":"7","/Users/sristichowdhury/Desktop/projects/stack-hack/client/src/components/Cart/Cart.jsx":"8","/Users/sristichowdhury/Desktop/projects/stack-hack/client/src/components/Home/Home.jsx":"9","/Users/sristichowdhury/Desktop/projects/stack-hack/client/src/components/Forms/FormPage.jsx":"10","/Users/sristichowdhury/Desktop/projects/stack-hack/client/src/components/Success/Success.jsx":"11","/Users/sristichowdhury/Desktop/projects/stack-hack/client/src/components/Cafe/Cafepage.jsx":"12","/Users/sristichowdhury/Desktop/projects/stack-hack/client/src/components/Cafe/CafePageItem.jsx":"13"},{"size":502,"mtime":1619936549615,"results":"14","hashOfConfig":"15"},{"size":3397,"mtime":1621573350438,"results":"16","hashOfConfig":"15"},{"size":362,"mtime":1611231579260,"results":"17","hashOfConfig":"15"},{"size":3262,"mtime":1621515007222,"results":"18","hashOfConfig":"15"},{"size":3215,"mtime":1621573359754,"results":"19","hashOfConfig":"15"},{"size":134,"mtime":1619468974689,"results":"20","hashOfConfig":"15"},{"size":136,"mtime":1619468969180,"results":"21","hashOfConfig":"15"},{"size":5643,"mtime":1621569956837,"results":"22","hashOfConfig":"15"},{"size":6474,"mtime":1621573346202,"results":"23","hashOfConfig":"15"},{"size":8482,"mtime":1621569910336,"results":"24","hashOfConfig":"15"},{"size":2227,"mtime":1621569926973,"results":"25","hashOfConfig":"15"},{"size":4051,"mtime":1621516207550,"results":"26","hashOfConfig":"15"},{"size":1653,"mtime":1621364696987,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"1c4dfkc",{"filePath":"31","messages":"32","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"30"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"30"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"49","messages":"50","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"30"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"30"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"30"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"30"},"/Users/sristichowdhury/Desktop/projects/stack-hack/client/src/index.js",[],["61","62"],"/Users/sristichowdhury/Desktop/projects/stack-hack/client/src/App.js",["63","64"],"/Users/sristichowdhury/Desktop/projects/stack-hack/client/src/reportWebVitals.js",[],"/Users/sristichowdhury/Desktop/projects/stack-hack/client/src/reducer.js",["65","66","67","68","69","70","71","72","73","74"],"export const reducer = (state,action) =>\n{\n\n  //default action passed initially\n  //state undefined initially\n\n  //2 return options\n  //old state or updated state\n  // console.log({state,action})\n\n\n  if(action.type=='DECREASE_ITEM')\n  {\n    let flag=false;\n    let existedItem=state.menu.find(item=>item.objectId==action.payload)\n\n    //find that item and den decrease    \n    let newmenu = state.cart.filter(item => item.objectId != action.payload);\n    let items = [...state.cart];\n    let newItems = items.filter((item) => {\n          if (item.objectId === action.payload) {\n              item.quantity-=1;\n              if(item.quantity==0)\n              flag=true;\n            }\n\n            return item;\n        });\n    \n        //if quantity is 0 dont return that item in the menu\n      if(flag)\n      {\n        return {...state,\n          cart:newmenu,\n          amount:state.amount-existedItem.Price,\n          total:state.total-1\n        }}\n      \n        //else return the updated menu\n      else\n      {\n        return {...state,\n        cart:newItems,\n        amount:state.amount-existedItem.Price,\n        total:state.total-1}}\n    \n  }\n\n  if(action.type=='INCREASE_ITEM')\n  {\n    let addedItem=state.menu.find(item=>item.objectId==action.payload)\n    let items = [...state.cart];\n    \n    let newItems = items.filter((item) => {\n          if (item.objectId === action.payload) {\n              item.quantity+=1;\n            }\n\n            return item;\n        });\n    \n    return {...state,\n        cart:newItems,\n        amount:state.amount+addedItem.Price,\n        total:state.total+1}\n  }\n\n\n\n  if(action.type=='CLEAR_CART')\n  {\n    return{\n            ...state,\n            cart: [],\n            total: 0,\n            amount:0\n          }\n  }\n\n\n  if(action.type===\"ADD_TO_CART\")\n  {\n    // console.log(state.cart,state.menu)\n    let addedItem=state.menu.find(item=>item.objectId===action.payload);\n    let existedItem=state.cart.find(item=>item.objectId===action.payload);\n    // console.log(addedItem,existedItem)\n    if(existedItem)\n    {\n      let newmenu = state.cart.filter(item => item.objectId != action.payload);\n      ///takes out newly added item\n      existedItem.quantity = existedItem.quantity+1;\n      newmenu.push(existedItem);\n\n      return {...state,\n        cart:newmenu,\n        amount:state.amount+addedItem.Price,\n        total:state.total+1\n      }\n    }\n    else\n    {\n       addedItem={...addedItem,quantity:1}\n       return {...state,\n        cart:[...state.cart,addedItem],\n        amount:state.amount+addedItem.Price,\n        total:state.total+1\n      }\n    }\n  }\n\n  if(action.type=='REMOVE_ITEM')\n  {\n    let itemToRemove= state.menu.find(item=>item.objectId===action.payload)\n    let new_items = state.cart.filter(item=> item.objectId!=action.payload)\n        \n    //calculating the total\n    let newTotal = state.total - (itemToRemove.quantity )\n    //calculate amount\n    let newAmount = state.amount - (itemToRemove.Price * itemToRemove.quantity )\n    console.log(itemToRemove)\n    return{\n            ...state,\n            cart: new_items,\n            total: newTotal,\n            amount:newAmount\n          }\n  }\n\n  \n  ///as a default always return the original stae(old state-before updation)\n  return state;\n}","/Users/sristichowdhury/Desktop/projects/stack-hack/client/src/components/Navbar/Navbar.jsx",["75","76","77","78","79","80"],"/Users/sristichowdhury/Desktop/projects/stack-hack/client/src/components/auth/Login/Login.jsx",[],"/Users/sristichowdhury/Desktop/projects/stack-hack/client/src/components/auth/Signup/Signup.jsx",[],"/Users/sristichowdhury/Desktop/projects/stack-hack/client/src/components/Cart/Cart.jsx",["81"],"// add react-stripe-checkout\nimport React,{useState} from 'react'\nimport { connect } from 'react-redux'\nimport { useHistory, useParams } from 'react-router-dom'\nimport Navbar from '../Navbar/Navbar';\nimport './cartStyles.css'\nimport StripeCheckout from 'react-stripe-checkout'\nrequire('dotenv').config()\n\nconst Cart = ({items,amount,removeItem,decreaseItem,increaseItem,clearCart}) => {\n\n\n    let history=useHistory()\n    const {id}=useParams();\n\n    const [product,setproduct]=useState({\n        name:\"Pay now\",\n        price:amount,\n        productBy:\"Roy\"\n      })\n\n      const makePayment=(token)=>{\n\n        console.log(token)\n        const body={\n          token,\n          product\n        }\n        const headers={\n          'Content-Type':'application/json'\n        }\n    \n        return fetch('/payment',{\n          method:\"POST\",\n          headers,\n          body: JSON.stringify(body)\n        })\n        .then(res=>{\n          console.log(\"RESPONSE\",res)\n          const {status}=res;\n          console.log(\"STATUS\",status)\n          clearCart();\n    \n        })\n        .catch(err=>{console.log(err)})\n      }\n\n\n    const CartItem = ({increase,decrease,deleteItem}) =>\n    \n    \n    \n    items.length ?\n    (  \n        items.map(item=>{\n            return(\n               \n                \n                <div className=\"cart-item\">\n                <div className=\"left-text\">\n                <button className=\"remove\"\n                onClick={()=>deleteItem(item.objectId)}>\n                    <i className=\"fa fa-trash\">\n                        </i></button>\n                    \n                <div className=\"item-img\">\n                <img src={item.ItemImage.url} alt={item.ItemName} />\n                </div>\n\n                <div className=\"item-desc\">\n                <span className=\"name text-dark\">{item.ItemName}</span><br></br>\n                <span className=\"price text-secondary\">₹{item.Price}</span>\n                </div>\n\n\n                    </div>\n                    <div className=\"right-text\">\n                    <button className=\"add\"\n                    onClick={()=>increase(item.objectId)}>\n                        <i className=\"fa fa-plus\"></i></button>\n                     <span className=\"quantity\">{item.quantity}</span>\n                     <button className=\"decrease\"\n                     onClick={()=>decrease(item.objectId)}>\n                     <i className=\"fa fa-minus\"></i></button>\n                    </div>\n                </div>                  \n            )\n        })\n    ):\n\n     (\n        <p class=\"clear-bag\">\n            <h1>Ooops!</h1> You have nothing here </p>\n     )\n\n\n\n     const pay = () =>\n     {\n        alert('Payment under process');\n        //dispatch clear cart from here\n     }\n\n    const deleteItem =(id) =>\n    {\n        removeItem(id);\n    }\n\n    const increase = (id)  =>{\n        increaseItem(id);\n    }\n\n    const decrease = (id) => \n    {\n        decreaseItem(id);\n    }\n\n\n    \n    return (\n\n        \n        <div className=\"home-container cart-container\">\n            <Navbar userId={id}/>\n        \n        <section className=\"banner\" id=\"banner\">\n            <div className=\"cart-content\">\n           {items.length>0 ? \n           <h5 className=\"title\">Order Summary<div></div></h5>:''}\n            <div className=\"collection\">\n               <CartItem increase={increase} decrease={decrease}\n               deleteItem={deleteItem}/>\n             \n            {items.length>0 ?\n                <div>\n                     <div \n              style={{borderBottom:'2px solid lightgrey',\n              width:'85%',\n              margin:'10px auto'}}/>\n               \n                    <div className=\"totalAmt\">\n            <h4>Total</h4>\n            <h5>₹ {amount}</h5>\n           </div> \n           <div className=\"cart-btn\">\n                <button onClick={()=>clearCart()}>\n                    Clear Cart</button>\n                    <button onClick={()=>history.goBack()}>\n                    Back to Menu Page</button>\n                    <StripeCheckout\n                    stripeKey=\"pk_test_51IpczwSH2HRN2Fzs59J5y9RUg3bWPSzsRmzfX7KqqXeJfkOHfSysZ3ZkzZ1xb6nFKoWLl9OrfhWuyTlpxUt6R5P9008Emj1q8e\"\n                    token={makePayment}\n                    name=\"Pay for your food\"\n                    amount={amount}\n                    >\n                    <button onClick={()=>pay()}>\n                    Proceed To Pay\n                    </button>\n                    </StripeCheckout>\n                   </div>\n            </div>\n            :<div className=\"cart-btn back-btn\">\n            <button onClick={()=>history.goBack()}>\n                Go Back to Menu Page</button></div>}\n    </div>\n</div>\n        </section>\n        \n        \n        </div>\n\n\n\n    )\n\n\n}\n\nconst mapStateToProps = (state)=>{\n    return{\n        items: state.cart,\n        amount:state.amount\n    }\n}\nconst mapDispatchToProps = (dispatch)=>{\n    return{\n        removeItem: (id)=>{\n            dispatch({ \n                        type: \"REMOVE_ITEM\", \n                        payload:id\n         });\n       },\n        increaseItem: (id)=>{\n            dispatch({ \n                        type: \"INCREASE_ITEM\", \n                        payload:id\n        });\n        },\n        decreaseItem: (id)=>{\n            dispatch({ \n                        type: \"DECREASE_ITEM\", \n                        payload:id\n        });\n    },\n        clearCart: ()=>{\n            dispatch({ \n                        type: \"CLEAR_CART\", \n                        payload:null\n        });\n        }\n    }\n}\n\n\nexport default connect(mapStateToProps,mapDispatchToProps)(Cart)\n","/Users/sristichowdhury/Desktop/projects/stack-hack/client/src/components/Home/Home.jsx",["82","83","84"],"/Users/sristichowdhury/Desktop/projects/stack-hack/client/src/components/Forms/FormPage.jsx",["85","86","87","88","89","90","91","92"],"import React,{useState} from 'react'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Button,Form,Modal, Spinner } from 'react-bootstrap';\nimport {useHistory} from 'react-router-dom'\nimport Navbar from '../Navbar/Navbar';\nimport './formStyles.css'\n\n\nconst FormPage=()=>{\n    const [name,setName]=useState(\"\");\n    const [orgname,setOrgName]=useState(\"\");\n    const [eid,seteId]=useState(\"\");\n    const [phone,setPhone]=useState(\"\");\n    const [email,setEmail]=useState(\"\");\n    const [photo,setPhoto]=useState(\"\");\n    const [show, setShow] = useState(false);\n    const [previewImg,setPreviewImg]=useState('');\n    const [fileName,setFileName]=useState('');\n    const [validated, setValidated] = useState(false);\n    const history=useHistory();\n    \n    const [loading,setLoading]=useState(false);\n\n    \n\n\n  //function controlling the modal open/close\n  const showModal = (event) => {\n\n\n    const form = event.currentTarget;\n    if(!previewImg)\n          {\n\n            setLoading(false);\n            alert(\"Upload a user image!\");\n            return;\n          }\n    \n\n\n    //manual and regex validation\n\n    if(name=='' || orgname=='' \n    || phone=='' || eid=='' || email=='')\n    {\n      alert('Fill all the fields!');\n      return;\n    }\n\n\n    if(!/^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/.test(email))\n    {\n      alert('Email is incorrect!');\n      return;\n    }\n\n\n    //react-bootstrap validation\n\n    if (form.checkValidity() === false) {\n      event.preventDefault();\n      event.stopPropagation();\n      setValidated(true);\n    }\n    else\n    {\n      setValidated(true);\n      setShow(true)\n    }\n\n    \n\n    \n  };\n\n\n  //function which handles form data posting to the backend\n    const postform=(e)=>{\n      \n       setLoading(true)\n\n       //formdata created\n        const formData=new FormData();\n        formData.append('userImage',photo);\n        formData.append('name',name);\n        formData.append('orgName',orgname);\n        formData.append('email',email);\n        formData.append('empID',eid);\n        formData.append('phone',phone);\n\n\n        //makes a post request to save user details in the database\n          fetch(\"/uploadForm\",\n          {\n            method:'POST',\n            body:formData\n\n          }).then(res=>res.json())\n          .then(res=>\n            {\n                \n                if(!res.error)\n                {\n                  //if no error,redirected to success screen\n\n                  //set data to local storage incase of any netwrok issues\n                  // localStorage.setItem({'user':{res.data_id}})\n                  history.push(`/success/${res.data._id}`)\n                }\n            else\n            {\n              //error is displayed on the screen otherwise.\n               setLoading(false);\n               setShow(!show);\n               alert(res.error);\n            }\n            })\n          .catch(err=>{\n            alert(err.error);\n            setLoading(false);\n          })\n        \n    }\n  \n\n\n\n\n   //basic form to add all details\n    return (\n      <div className=\"form-container\">\n      <div className=\"home-container\">\n      \n      <Navbar/>\n\n        <section className=\"banner\" id=\"banner\">\n        <div className=\"form-div\">\n        <Form className=\"form\" \n        noValidate validated={validated}>\n          \n         <h3>Upload your Details!</h3>\n\n\n       <Form.Group controlId=\"formBasicName\">\n\n          <Form.Label className=\"label\">Name</Form.Label>\n\n          <Form.Control type=\"text\" \n          placeholder=\"Enter full name\" \n          onChange={(e)=>setName(e.target.value)} \n          required/>\n\n\n          <Form.Control.Feedback type=\"invalid\">Please enter your full name.</Form.Control.Feedback>\n          <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\n        \n        </Form.Group>\n          \n\n\n        <Form.Group controlId=\"formBasicOrganisation\">\n\n        <Form.Label  className=\"label\">Organisation Name</Form.Label>\n\n        <Form.Control type=\"text\" \n        placeholder=\"Enter organisation name\" \n        onChange={(event)=>setOrgName(event.target.value)} \n        required/>\n\n        <Form.Control.Feedback type=\"invalid\">Please enter your organisation name.</Form.Control.Feedback>\n        <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\n\n        </Form.Group>\n\n\n\n\n\n          <Form.Group controlId=\"formBasicId\">\n\n          <Form.Label  className=\"label\">Emplopyee ID No.</Form.Label>\n\n          <Form.Control type=\"number\" \n          placeholder=\"Enter Emplopyee ID No\" \n          onChange={(event)=>seteId(event.target.value)} \n          required/>\n\n          <Form.Control.Feedback type=\"invalid\">Please enter your employee ID No.</Form.Control.Feedback>\n          <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\n\n\n          </Form.Group>\n\n\n\n\n          <Form.Group controlId=\"formBasicPhone\">\n\n          <Form.Label  className=\"label\">Phone No.</Form.Label>\n\n          <Form.Control type=\"number\" \n          placeholder=\"Enter Phone No.\" \n          onChange={(event)=>setPhone(event.target.value)} required/>\n\n          <Form.Control.Feedback type=\"invalid\">Please enter a valid phone number.</Form.Control.Feedback>\n          <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\n\n\n          </Form.Group>\n\n\n          <Form.Group controlId=\"formBasicEmail\">\n\n          <Form.Label className=\"label\">Email address</Form.Label>\n\n          <Form.Control type=\"email\" \n          placeholder=\"Enter email\" \n          onChange={(event)=>setEmail(event.target.value)} \n          required/>\n\n          <Form.Text className=\"text-muted\">\n            We'll never share your email with anyone else.\n          </Form.Text>\n\n\n          <Form.Control.Feedback type=\"invalid\">Please enter your correct email ID.</Form.Control.Feedback>\n          <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\n\n\n          </Form.Group>\n\n          <Form.Group>\n\n          <Form.Label className=\"label\">Upload ID Card</Form.Label>\n\n          <Form.File id=\"exampleFormControlFile1\" \n            onChange={(event)=>\n            {\n              setPhoto(event.target.files[0])\n              setFileName(event.target.files[0].name)\n              setPreviewImg(URL.createObjectURL(event.target.files[0]))\n            }} \n            accept=\".jpg,.png,.jpeg\" \n          />       \n          </Form.Group>\n\n          <div className=\"upload-div\">\n          <Button for=\"exampleFormControlFile1\" \n          onClick={()=>{\n            document.querySelector('#exampleFormControlFile1')\n            .click();\n          }}type=\"button\" \n          className=\"upload-btn\"\n          >Upload</Button>\n          {fileName?<span>{fileName}</span>:<span>Choose an image</span>}\n</div>\n\n          <div className=\"form-submit\">\n        <Button  className=\"submit-btn\" \n        onClick={showModal} float=\"right\">\n          Submit\n        </Button>\n        </div>\n  \n        </Form>\n       \n        </div>\n       \n        </section>\n        <Modal\n          className=\"modal\"\n          show={show}\n          onHide={() => setShow(false)}\n          size=\"lg\"\n          aria-labelledby=\"example-custom-modal-styling-title\"\n        >\n          <Modal.Header closeButton className=\"modal-header\">\n            <Modal.Title id=\"example-custom-modal-styling-title\"\n            className=\"modal-title\">\n             Details Preview\n            </Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n\n          <div className=\"modalImage\">\n             <img src={previewImg}/>\n          </div>\n          <div className=\"modalText\">\n              <h4><span>Name :</span>{name}</h4>\n              <h4><span>Organisation Name :</span>{orgname}</h4>\n              <h4><span>Phone :</span>{phone!==undefined||phone!==null?phone:`  Add Phone No.`}</h4>\n              <h4><span>Employee ID :</span>{eid}</h4>\n              <h4><span>Email ID :</span>{email}</h4>\n          </div>\n\n\n\n            {loading?<Spinner animation=\"border\" role=\"status\" className=\"spinner\"/>:''}\n          </Modal.Body>\n          <Modal.Footer>\n            <Button onClick={postform} \n            className=\"modal-submit\">Submit</Button>\n            <Button onClick={()=>setShow(false)} \n            variant=\"secondary\"\n            className=\"modal-changes\">Make Changes</Button>\n          </Modal.Footer>\n        </Modal>\n  \n  \n      </div>\n    </div>\n    );\n}\n\n\nexport default FormPage","/Users/sristichowdhury/Desktop/projects/stack-hack/client/src/components/Success/Success.jsx",["93","94","95"],"import React,{useEffect, useState} from \"react\";\nimport { Button,Spinner } from \"react-bootstrap\";\nimport { Link,useParams } from \"react-router-dom\";\nimport './successStyles.css'\nimport success from './../../images/success.jpg'\nimport {connect} from 'react-redux'\n\n\n\n\nconst Success=({items})=>{\n\nconst {id}=useParams();\nconsole.log(items)\n\nconst [userImg,setUserImg]=useState('');\nconst [userData,setUserData]=useState('');\nconst [name,setName]=useState('')\n\n//fetch data passed from home using state in history.push \nuseEffect(() => {\n    fetch(`/add/fetchDetails/${id}`,\n          {\n            method:'GET',\n\n          }).then(res=>res.json())\n          .then(res=>\n            {\n                //fetched user data is saved to the corresponding fields \n                setUserData(res.data);\n                setName(res.data.name)\n                setUserImg(res.data.image.replace(\"public\", \"\"));\n            })\n          .catch(err=>{\n            alert(err.error);\n          })\n}, [])\n\n\n\n//displays user data in jumbotron\nreturn(\n  <div className=\"success-container\">\n    {userData?\n    <div\n    className=\"success-div\">\n    <div className=\"success-vector\">\n      <img src={success}></img>\n    </div>\n    <br/>\n    <div className=\"success-text\">\n    <div className=\"reg-title\">\n      <h3>Great!</h3>\n      <p className=\"reg-details\">\n      <p>You have successfully completed your registration.\n       <br></br>Your Registration ID:<span style={{\n        fontSize:'1.4em',\n        color:'white',\n        fontWeight:'bolder'\n      }}>\n        {userData._id.substr(0,8)}\n      </span>\n      <span>(Kindly do not share this with anyone!)</span></p>\n      </p>\n      \n    </div>\n    <p className=\"link\">\n        <Link to=\n        {{\n          pathname:`/menu/${id}`,\n          state:\n          {\n            name:{name},\n            items:{items}\n          }}}>\n        <Button className=\"browse-button\"\n        >Browse Cafe Menu</Button>\n        </Link>\n        \n    </p>\n    </div>\n    </div>:<Spinner animation=\"border\" \n    role=\"status\" className=\"spinner\"/>}\n    \n    </div>\n    \n\n)\n\n}\n\n\n\n\nconst mapStatetoProps=(state)=>\n{\n\n  \n  return {\n    items: state.menu\n     }\n\n}\n\nexport default  connect(mapStatetoProps)(Success)","/Users/sristichowdhury/Desktop/projects/stack-hack/client/src/components/Cafe/Cafepage.jsx",["96","97","98","99"],"import React,{useState} from \"react\";\nimport { Container,Row} from \"react-bootstrap\";\nimport { useParams,useLocation } from \"react-router-dom\";\nimport Navbar from \"../Navbar/Navbar\"\nimport './cafeStyles.css'\nimport CafePageItem from \"./CafePageItem\";\nimport {connect} from 'react-redux'\n\n\n\nconst Cafepage = ({addItemToCart}) => {\n\n//get extra data passed from success page\nconst location = useLocation()\nconsole.log(location)\n\nconst {id}=useParams();\nconst [loading,setLoading]=useState(true)\nconst [foodItems,setFoodItems]=useState(location.state?location.state.items.items:[]);\nconst [name,setName]=useState(location.state?location.state.name.name:'')\n\n\n\n  //calls the route on the backend which saves the food array to the database and returns the items.\n \n//add to cart functionality is implemented\n// const addToCart = (itemName,price,quantity) =>\n// {\n\n//    //if cart is not empty then we check if the added item is already present in the cafe or not.\n   \n//    if(cart.length!=0)\n//    {\n//       var item=cart.find(({ name }) => name === itemName)\n\n//       //If present,we simply increase the quantity and add up the price\n//       if(item) \n//       {\n//         item.quantity+=1;\n//         item.price+=price;\n//         setTotal(total+price)\n//         setCart(cart)\n        \n//       }\n//       //else we create a new item and push it to the existing array\n//       else \n//       {\n//         setCart([...cart,{name:itemName,price,quantity}])\n//         setTotal(total+price);\n//       }\n//    }\n\n//    //else we create a new item and push into the empty array\n//    else\n//    {\n//     setCart([...cart,{name:itemName,price,quantity}])\n//     setTotal(total+price);\n//    }\n\n\n//    localStorage.setItem('cart',JSON.stringify(cart))\n   \n// }\n \n\n\nconst addToCart = (id) =>\n{\n  addItemToCart(id)\n}\n\n\n\n//implemented the delete functionality using this function\n// const deleteFromCart = (itemName) =>\n// {\n//     var item=cart.find(({name})=>name===itemName)\n//     var newcart=cart.filter(item=>item.name!=itemName);\n//     console.log(newcart)\n//     setTotal(total-item.price);\n//     setCart(newcart);\n// }\n\n\n\n\n//completely clears the cart if there are existing items\n// const clearCart = () =>\n// {\n//    setCart([]);\n//    setTotal(0);\n// }\n\n\n\n//This function starts a timer for an interval(takeaway time for the order)\n// const pay = () =>\n// {\n//    setLoading(true);\n//    alert(`Payment Processing with ${paymentMode}!`);\n//    setTimeout(() => {\n//      setLoading(false)\n//      clearCart();\n\n//      alert(\"Payment Completed...Enjoy your meal!\");\n//    }, 3000);\n// }\n\n\n\n  \n\n\n\n\n//renders food items grid and cart box in a flex display\n  return (\n    <div className=\"cafe-container\">\n      <div className=\"home-container\">\n        <Navbar userId={id} userName={name}/>\n      {/* <CafeNav id={id}/> */}\n      <section className=\"banner\" id=\"banner\">\n        <div className=\"cafe-content\">\n      {foodItems.length==0 && loading?\n            <div className=\"spinner\">\n                <div class=\"spinner-grow text-info\" \n            role=\"status\">\n            <span class=\"sr-only\">Loading...</span>\n            <b/><br/>\n            <h4>Loading...</h4>\n          </div>\n            </div>:\n            <Container style={{margin:'10px auto'}}>\n            <Row>\n                {foodItems.map((item)=>\n                  {\n                    return(\n                       <CafePageItem item={item}\n                       id={id}\n                       addToCart={addToCart}\n                      />\n                    )\n                  })}\n              \n               \n            </Row>\n          </Container>}\n       \n        </div>\n        </section>\n        </div>\n    </div>\n  );\n};\n\n\n\n\n\nconst mapStatetoProps=(state)=>\n{\n\n  \n  return {\n    items: state.menu\n     }\n\n}\n\n\n\nconst mapDispatchToProps= (dispatch)=>{\n    \n  return{\n      addItemToCart: (id)=>{\n         dispatch({ \n        type: \"ADD_TO_CART\", \n        payload:id\n      });\n    }\n\n  }\n}\n\nexport default  connect(mapStatetoProps,mapDispatchToProps)(Cafepage)","/Users/sristichowdhury/Desktop/projects/stack-hack/client/src/components/Cafe/CafePageItem.jsx",["100"],"import React from 'react'\nimport { useState } from 'react';\n\nimport { Card, Col} from \"react-bootstrap\";\nimport { Link } from 'react-router-dom';\n\nconst CafePageItem = ({item,addToCart,id}) => {\n\n  // console.log(item,addToCart)\n  const [flag,setFlag]=useState(false)\n    return (\n            <>\n                <Col lg={4} md={6} xs={12}>\n                <Card style={{marginBottom:'20px'}}>\n               <Card.Img\n               className=\"cardImage\"\n                 variant=\"top\"\n                 src={item.ItemImage.url}\n                 alt={item.ItemName}\n               />\n               <Card.Body>\n                 <Card.Title><h4>{item.ItemName}</h4>\n                 </Card.Title>\n\n                 <Card.Text>\n                   <h4 style={{display:'flex',justifyContent:'space-between'}}>\n                     <h5 style={{color:'gray'}}>Price</h5>\n                     <span>Rs.{item.Price}</span></h4>\n                 </Card.Text>\n               </Card.Body>\n               <Card.Footer>\n                {flag==false ? <button className=\"addToCart\"\n                  onClick={()=>\n                    {\n                      setFlag(true);\n                      addToCart(item.objectId)\n                  }}\n                 >Add to Cart</button> : \n                <Link to={`/cart/${id}`} >\n                <button className=\"addToCart\">\n                   View Bag</button></Link>\n                   }\n\n               </Card.Footer>\n             </Card>\n            </Col>\n            </>\n    )\n}\n\nexport default CafePageItem\n\n\n\n//store - data is stored,think of state\n//reducer - updates data and state based on actions displatched",{"ruleId":"101","replacedBy":"102"},{"ruleId":"103","replacedBy":"104"},{"ruleId":"105","severity":1,"message":"106","line":123,"column":49,"nodeType":"107","messageId":"108","endLine":123,"endColumn":51},{"ruleId":"105","severity":1,"message":"109","line":147,"column":17,"nodeType":"107","messageId":"108","endLine":147,"endColumn":19},{"ruleId":"105","severity":1,"message":"109","line":12,"column":17,"nodeType":"107","messageId":"108","endLine":12,"endColumn":19},{"ruleId":"105","severity":1,"message":"109","line":15,"column":56,"nodeType":"107","messageId":"108","endLine":15,"endColumn":58},{"ruleId":"105","severity":1,"message":"106","line":18,"column":59,"nodeType":"107","messageId":"108","endLine":18,"endColumn":61},{"ruleId":"105","severity":1,"message":"109","line":23,"column":31,"nodeType":"107","messageId":"108","endLine":23,"endColumn":33},{"ruleId":"105","severity":1,"message":"109","line":49,"column":17,"nodeType":"107","messageId":"108","endLine":49,"endColumn":19},{"ruleId":"105","severity":1,"message":"109","line":51,"column":54,"nodeType":"107","messageId":"108","endLine":51,"endColumn":56},{"ruleId":"105","severity":1,"message":"109","line":70,"column":17,"nodeType":"107","messageId":"108","endLine":70,"endColumn":19},{"ruleId":"105","severity":1,"message":"106","line":89,"column":61,"nodeType":"107","messageId":"108","endLine":89,"endColumn":63},{"ruleId":"105","severity":1,"message":"109","line":111,"column":17,"nodeType":"107","messageId":"108","endLine":111,"endColumn":19},{"ruleId":"105","severity":1,"message":"106","line":114,"column":59,"nodeType":"107","messageId":"108","endLine":114,"endColumn":61},{"ruleId":"110","severity":1,"message":"111","line":14,"column":11,"nodeType":"112","messageId":"113","endLine":14,"endColumn":16},{"ruleId":"110","severity":1,"message":"114","line":16,"column":12,"nodeType":"112","messageId":"113","endLine":16,"endColumn":18},{"ruleId":"110","severity":1,"message":"115","line":17,"column":13,"nodeType":"112","messageId":"113","endLine":17,"endColumn":20},{"ruleId":"105","severity":1,"message":"109","line":30,"column":15,"nodeType":"107","messageId":"108","endLine":30,"endColumn":17},{"ruleId":"116","severity":1,"message":"117","line":68,"column":4,"nodeType":"118","endLine":68,"endColumn":6,"suggestions":"119"},{"ruleId":"120","severity":1,"message":"121","line":87,"column":9,"nodeType":"122","endLine":88,"endColumn":25},{"ruleId":"110","severity":1,"message":"123","line":16,"column":20,"nodeType":"112","messageId":"113","endLine":16,"endColumn":30},{"ruleId":"105","severity":1,"message":"106","line":38,"column":17,"nodeType":"107","messageId":"108","endLine":38,"endColumn":19},{"ruleId":"120","severity":1,"message":"121","line":44,"column":21,"nodeType":"122","endLine":44,"endColumn":66},{"ruleId":"120","severity":1,"message":"121","line":93,"column":24,"nodeType":"122","endLine":93,"endColumn":65},{"ruleId":"105","severity":1,"message":"109","line":44,"column":12,"nodeType":"107","messageId":"108","endLine":44,"endColumn":14},{"ruleId":"105","severity":1,"message":"109","line":44,"column":27,"nodeType":"107","messageId":"108","endLine":44,"endColumn":29},{"ruleId":"105","severity":1,"message":"109","line":45,"column":13,"nodeType":"107","messageId":"108","endLine":45,"endColumn":15},{"ruleId":"105","severity":1,"message":"109","line":45,"column":24,"nodeType":"107","messageId":"108","endLine":45,"endColumn":26},{"ruleId":"105","severity":1,"message":"109","line":45,"column":37,"nodeType":"107","messageId":"108","endLine":45,"endColumn":39},{"ruleId":"124","severity":1,"message":"125","line":52,"column":19,"nodeType":"126","messageId":"127","endLine":52,"endColumn":20,"suggestions":"128"},{"ruleId":"124","severity":1,"message":"125","line":52,"column":44,"nodeType":"126","messageId":"127","endLine":52,"endColumn":45,"suggestions":"129"},{"ruleId":"120","severity":1,"message":"121","line":287,"column":14,"nodeType":"122","endLine":287,"endColumn":37},{"ruleId":"110","severity":1,"message":"130","line":16,"column":8,"nodeType":"112","messageId":"113","endLine":16,"endColumn":15},{"ruleId":"116","severity":1,"message":"131","line":37,"column":4,"nodeType":"118","endLine":37,"endColumn":6,"suggestions":"132"},{"ruleId":"120","severity":1,"message":"121","line":48,"column":7,"nodeType":"122","endLine":48,"endColumn":26},{"ruleId":"110","severity":1,"message":"133","line":18,"column":16,"nodeType":"112","messageId":"113","endLine":18,"endColumn":26},{"ruleId":"110","severity":1,"message":"134","line":19,"column":18,"nodeType":"112","messageId":"113","endLine":19,"endColumn":30},{"ruleId":"110","severity":1,"message":"115","line":20,"column":13,"nodeType":"112","messageId":"113","endLine":20,"endColumn":20},{"ruleId":"105","severity":1,"message":"109","line":124,"column":24,"nodeType":"107","messageId":"108","endLine":124,"endColumn":26},{"ruleId":"105","severity":1,"message":"109","line":32,"column":22,"nodeType":"107","messageId":"108","endLine":32,"endColumn":24},"no-native-reassign",["135"],"no-negated-in-lhs",["136"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","Expected '===' and instead saw '=='.","no-unused-vars","'setId' is assigned a value but never used.","Identifier","unusedVar","'setLoc' is assigned a value but never used.","'setName' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'id' and 'loc'. Either include them or remove the dependency array.","ArrayExpression",["137"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'setproduct' is assigned a value but never used.","no-useless-escape","Unnecessary escape character: \\[.","Literal","unnecessaryEscape",["138","139"],["140","141"],"'userImg' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.",["142"],"'setLoading' is assigned a value but never used.","'setFoodItems' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"143","fix":"144"},{"messageId":"145","fix":"146","desc":"147"},{"messageId":"148","fix":"149","desc":"150"},{"messageId":"145","fix":"151","desc":"147"},{"messageId":"148","fix":"152","desc":"150"},{"desc":"153","fix":"154"},"Update the dependencies array to be: [id, loc]",{"range":"155","text":"156"},"removeEscape",{"range":"157","text":"158"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"159","text":"160"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"161","text":"158"},{"range":"162","text":"160"},"Update the dependencies array to be: [id]",{"range":"163","text":"164"},[1891,1893],"[id, loc]",[1270,1271],"",[1270,1270],"\\",[1295,1296],[1295,1295],[986,988],"[id]"]