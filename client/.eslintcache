[{"/Users/sristichowdhury/Desktop/checking-1/client/src/index.js":"1","/Users/sristichowdhury/Desktop/checking-1/client/src/App.js":"2","/Users/sristichowdhury/Desktop/checking-1/client/src/reportWebVitals.js":"3","/Users/sristichowdhury/Desktop/checking-1/client/src/components/Success.jsx":"4","/Users/sristichowdhury/Desktop/checking-1/client/src/components/Cafepage.jsx":"5","/Users/sristichowdhury/Desktop/checking-1/client/src/components/Home.jsx":"6","/Users/sristichowdhury/Desktop/checking-1/client/src/components/CafeNav.jsx":"7"},{"size":500,"mtime":1611231579259,"results":"8","hashOfConfig":"9"},{"size":604,"mtime":1611418569378,"results":"10","hashOfConfig":"9"},{"size":362,"mtime":1611231579260,"results":"11","hashOfConfig":"9"},{"size":1824,"mtime":1611419000164,"results":"12","hashOfConfig":"9"},{"size":3859,"mtime":1611418707014,"results":"13","hashOfConfig":"9"},{"size":7040,"mtime":1611407768367,"results":"14","hashOfConfig":"9"},{"size":1199,"mtime":1611419445476,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"7ymw2h",{"filePath":"19","messages":"20","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"25","messages":"26","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"27","messages":"28","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"18"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/sristichowdhury/Desktop/checking-1/client/src/index.js",[],["32","33"],"/Users/sristichowdhury/Desktop/checking-1/client/src/App.js",["34","35"],"/Users/sristichowdhury/Desktop/checking-1/client/src/reportWebVitals.js",[],"/Users/sristichowdhury/Desktop/checking-1/client/src/components/Success.jsx",["36","37","38"],"/Users/sristichowdhury/Desktop/checking-1/client/src/components/Cafepage.jsx",["39","40","41","42","43"],"/Users/sristichowdhury/Desktop/checking-1/client/src/components/Home.jsx",["44","45","46","47"],"import React from 'react'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Button,Form,Modal, Spinner } from 'react-bootstrap';\n\nimport {useState} from 'react'\nimport {BrowserRouter,Route,Switch,useHistory} from 'react-router-dom'\n\n\nconst Home=()=>{\n    const [name,setName]=useState(\"\");\n    const [orgname,setOrgName]=useState(\"\");\n    const [eid,seteId]=useState(\"\");\n    const [phone,setPhone]=useState(\"\");\n    const [email,setEmail]=useState(\"\");\n    const [photo,setPhoto]=useState(\"\");\n    const [show, setShow] = useState(false);\n    const [previewImg,setPreviewImg]=useState('');\n    const [validated, setValidated] = useState(false);\n    const history=useHistory();\n    \n\n    const [loading,setLoading]=useState(false);\n\n    \n\n\n    const uploadImage = (e) =>\n    {\n          setLoading(true)\n          e.preventDefault();\n\n          if(!photo)\n          {\n\n            setLoading(false);\n            alert(\"Upload a user image!\");\n            return;\n          }\n          \n          setPreviewImg(URL.createObjectURL(photo));\n          setLoading(false);\n          alert(\"Image Uploaded\");\n\n\n    }\n\n\n  const showModal = (event) => {\n\n\n    const form = event.currentTarget;\n    if(!photo)\n          {\n\n            setLoading(false);\n            alert(\"Upload a user image!\");\n            return;\n          }\n    if (form.checkValidity() === false) {\n      event.preventDefault();\n      event.stopPropagation();\n    }\n    setShow(true)\n      setValidated(true);\n  };\n\n\n    const postform=(e)=>{\n      \n       setLoading(true)\n        const formData=new FormData();\n        formData.append('userImage',photo);\n        formData.append('name',name);\n        formData.append('orgName',orgname);\n        formData.append('email',email);\n        formData.append('empID',eid);\n        formData.append('phone',phone);\n\n          fetch(\"/add/uploadForm\",\n          {\n            method:'POST',\n            body:formData\n\n          }).then(res=>res.json())\n          .then(res=>\n            {\n                console.log(res);\n                // setPhoto(res.imagePath);\n                \n                if(!res.error)\n                {\n                  history.push(`/success/${res.data._id}`)\n            }\n            else\n            {\n               setLoading(false);\n               setShow(!show);\n               console.log(res.error)\n               alert(res.error);\n            }\n            })\n          .catch(err=>{\n            console.log(err)\n            alert(err.error);\n            setLoading(false);\n          })\n        \n    }\n  \n    return (\n      <div className=\"App\">\n      \n       <Form \n       style={{width:\"70%\",margin:\"2% auto\",padding:\"2% 5%\",border:\"1px\",borderRadius:\"1rem\",background:\"#f8f1f1\"}}\n       noValidate validated={validated}>\n\n\n       <h3>Add Details </h3>\n\n\n       <Form.Group controlId=\"formBasicName\">\n\n          <Form.Label >Name</Form.Label>\n\n          <Form.Control type=\"text\" \n          placeholder=\"Enter full name\" \n          onChange={(e)=>setName(e.target.value)} \n          required/>\n\n\n          <Form.Control.Feedback type=\"invalid\">Please enter your full name.</Form.Control.Feedback>\n          <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\n        \n        </Form.Group>\n          \n\n\n        <Form.Group controlId=\"formBasicOrganisation\">\n\n        <Form.Label >Organisation Name</Form.Label>\n\n        <Form.Control type=\"text\" \n        placeholder=\"Enter organisation name\" \n        onChange={(event)=>setOrgName(event.target.value)} \n        required/>\n\n        <Form.Control.Feedback type=\"invalid\">Please enter your organisation name.</Form.Control.Feedback>\n        <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\n\n        </Form.Group>\n\n\n\n\n\n          <Form.Group controlId=\"formBasicId\">\n\n          <Form.Label >Emplopyee ID No.</Form.Label>\n\n          <Form.Control type=\"number\" \n          placeholder=\"Enter Emplopyee ID No\" \n          onChange={(event)=>seteId(event.target.value)} \n          required/>\n\n          <Form.Control.Feedback type=\"invalid\">Please enter your employee ID No.</Form.Control.Feedback>\n          <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\n\n\n          </Form.Group>\n\n\n\n\n          <Form.Group controlId=\"formBasicPhone\">\n\n          <Form.Label >Phone No.</Form.Label>\n\n          <Form.Control type=\"number\" \n          placeholder=\"Enter Phone No.\" \n          onChange={(event)=>setPhone(event.target.value)} required/>\n\n          <Form.Control.Feedback type=\"invalid\">Please enter a valid phone number.</Form.Control.Feedback>\n          <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\n\n\n          </Form.Group>\n\n\n          <Form.Group controlId=\"formBasicEmail\">\n\n          <Form.Label>Email address</Form.Label>\n\n          <Form.Control type=\"email\" \n          placeholder=\"Enter email\" \n          onChange={(event)=>setEmail(event.target.value)} \n          required/>\n\n          <Form.Text className=\"text-muted\">\n            We'll never share your email with anyone else.\n          </Form.Text>\n\n\n          <Form.Control.Feedback type=\"invalid\">Please enter your correct email ID.</Form.Control.Feedback>\n          <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\n\n\n          </Form.Group>\n\n          <Form.Group>\n\n          <Form.Label>Upload ID Card</Form.Label>\n\n          <Form.File id=\"exampleFormControlFile1\" \n          onChange={(event)=>{setPhoto(event.target.files[0])}} \n          accept=\".jpg,.png,.jpeg\" \n          />       \n          </Form.Group>\n\n          <Button type=\"button\" \n          variant=\"primary\" \n          onClick={uploadImage}>Upload Image</Button>\n\n          <br/>\n          <br/>\n        \n        <Button variant=\"primary\" onClick={showModal} float=\"right\">\n          Submit\n        </Button>\n  \n        </Form>\n     \n  \n  \n        {loading?<Spinner animation=\"border\" role=\"status\" className=\"spinner\"/>:''}\n       \n        \n        <Modal\n          className=\"modal\"\n          show={show}\n          onHide={() => setShow(false)}\n          size=\"lg\"\n          aria-labelledby=\"example-custom-modal-styling-title\"\n        >\n          <Modal.Header closeButton>\n            <Modal.Title id=\"example-custom-modal-styling-title\">\n             Details Preview\n            </Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n\n          <p className=\"modalText\">\n            <img src={previewImg}/>\n              <h4><span>Name:</span>{name}</h4>\n              <h4><span>Organisation Name:</span>{orgname}</h4>\n              <h4><span>Phone:</span>{phone!==undefined||phone!==null?phone:`  Add Phone No.`}</h4>\n              <h4><span>Employee ID:</span>{eid}</h4>\n              <h4><span>Email ID:</span>{email}</h4>\n            </p>\n          </Modal.Body>\n          <Modal.Footer>\n            <Button onClick={postform} variant=\"primary\">Submit</Button>\n            <Button onClick={()=>setShow(false)} variant=\"secondary\">Make Changes</Button>\n          </Modal.Footer>\n        </Modal>\n  \n  \n      </div>\n    );\n}\n\nexport default Home","/Users/sristichowdhury/Desktop/checking-1/client/src/components/CafeNav.jsx",["48"],{"ruleId":"49","replacedBy":"50"},{"ruleId":"51","replacedBy":"52"},{"ruleId":"53","severity":1,"message":"54","line":5,"column":9,"nodeType":"55","messageId":"56","endLine":5,"endColumn":17},{"ruleId":"53","severity":1,"message":"57","line":6,"column":36,"nodeType":"55","messageId":"56","endLine":6,"endColumn":46},{"ruleId":"53","severity":1,"message":"58","line":10,"column":7,"nodeType":"55","messageId":"56","endLine":10,"endColumn":15},{"ruleId":"53","severity":1,"message":"59","line":11,"column":8,"nodeType":"55","messageId":"56","endLine":11,"endColumn":15},{"ruleId":"60","severity":1,"message":"61","line":34,"column":4,"nodeType":"62","endLine":34,"endColumn":6,"suggestions":"63"},{"ruleId":"53","severity":1,"message":"64","line":3,"column":16,"nodeType":"55","messageId":"56","endLine":3,"endColumn":24},{"ruleId":"53","severity":1,"message":"65","line":3,"column":53,"nodeType":"55","messageId":"56","endLine":3,"endColumn":60},{"ruleId":"66","severity":1,"message":"67","line":104,"column":25,"nodeType":"68","messageId":"69","endLine":104,"endColumn":27},{"ruleId":"66","severity":1,"message":"67","line":137,"column":22,"nodeType":"68","messageId":"69","endLine":137,"endColumn":24},{"ruleId":"66","severity":1,"message":"70","line":152,"column":55,"nodeType":"68","messageId":"69","endLine":152,"endColumn":57},{"ruleId":"53","severity":1,"message":"71","line":6,"column":9,"nodeType":"55","messageId":"56","endLine":6,"endColumn":22},{"ruleId":"53","severity":1,"message":"72","line":6,"column":23,"nodeType":"55","messageId":"56","endLine":6,"endColumn":28},{"ruleId":"53","severity":1,"message":"73","line":6,"column":29,"nodeType":"55","messageId":"56","endLine":6,"endColumn":35},{"ruleId":"74","severity":1,"message":"75","line":252,"column":13,"nodeType":"76","endLine":252,"endColumn":36},{"ruleId":"60","severity":1,"message":"61","line":28,"column":4,"nodeType":"62","endLine":28,"endColumn":6,"suggestions":"77"},"no-native-reassign",["78"],"no-negated-in-lhs",["79"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'useHistory' is defined but never used.","'location' is assigned a value but never used.","'loading' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.","ArrayExpression",["80"],"'CardDeck' is defined but never used.","'Spinner' is defined but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","Expected '===' and instead saw '=='.","'BrowserRouter' is defined but never used.","'Route' is defined but never used.","'Switch' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",["81"],"no-global-assign","no-unsafe-negation",{"desc":"82","fix":"83"},{"desc":"82","fix":"84"},"Update the dependencies array to be: [id]",{"range":"85","text":"86"},{"range":"87","text":"86"},[920,922],"[id]",[700,702]]