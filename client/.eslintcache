[{"/Users/sristichowdhury/Desktop/projects/stack-hack/client/src/index.js":"1","/Users/sristichowdhury/Desktop/projects/stack-hack/client/src/App.js":"2","/Users/sristichowdhury/Desktop/projects/stack-hack/client/src/reportWebVitals.js":"3","/Users/sristichowdhury/Desktop/projects/stack-hack/client/src/reducer.js":"4","/Users/sristichowdhury/Desktop/projects/stack-hack/client/src/components/Navbar/Navbar.jsx":"5","/Users/sristichowdhury/Desktop/projects/stack-hack/client/src/components/auth/Login/Login.jsx":"6","/Users/sristichowdhury/Desktop/projects/stack-hack/client/src/components/auth/Signup/Signup.jsx":"7","/Users/sristichowdhury/Desktop/projects/stack-hack/client/src/components/Cart/Cart.jsx":"8","/Users/sristichowdhury/Desktop/projects/stack-hack/client/src/components/Home/Home.jsx":"9","/Users/sristichowdhury/Desktop/projects/stack-hack/client/src/components/Forms/FormPage.jsx":"10","/Users/sristichowdhury/Desktop/projects/stack-hack/client/src/components/Success/Success.jsx":"11","/Users/sristichowdhury/Desktop/projects/stack-hack/client/src/components/Cafe/Cafepage.jsx":"12","/Users/sristichowdhury/Desktop/projects/stack-hack/client/src/components/Cafe/CafePageItem.jsx":"13"},{"size":502,"mtime":1619936549615,"results":"14","hashOfConfig":"15"},{"size":3418,"mtime":1621509651110,"results":"16","hashOfConfig":"15"},{"size":362,"mtime":1611231579260,"results":"17","hashOfConfig":"15"},{"size":3262,"mtime":1621515007222,"results":"18","hashOfConfig":"15"},{"size":2746,"mtime":1621510737825,"results":"19","hashOfConfig":"15"},{"size":134,"mtime":1619468974689,"results":"20","hashOfConfig":"15"},{"size":136,"mtime":1619468969180,"results":"21","hashOfConfig":"15"},{"size":5664,"mtime":1621514593529,"results":"22","hashOfConfig":"15"},{"size":6528,"mtime":1621450394270,"results":"23","hashOfConfig":"15"},{"size":8507,"mtime":1621364763306,"results":"24","hashOfConfig":"15"},{"size":2150,"mtime":1621441629416,"results":"25","hashOfConfig":"15"},{"size":3962,"mtime":1621508936530,"results":"26","hashOfConfig":"15"},{"size":1653,"mtime":1621364696987,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"1c4dfkc",{"filePath":"31","messages":"32","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"37","messages":"38","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"45","messages":"46","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"30"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"30"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"30"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"30"},"/Users/sristichowdhury/Desktop/projects/stack-hack/client/src/index.js",[],["59","60"],"/Users/sristichowdhury/Desktop/projects/stack-hack/client/src/App.js",["61","62"],"/Users/sristichowdhury/Desktop/projects/stack-hack/client/src/reportWebVitals.js",[],"/Users/sristichowdhury/Desktop/projects/stack-hack/client/src/reducer.js",["63","64","65","66","67","68","69","70","71","72"],"/Users/sristichowdhury/Desktop/projects/stack-hack/client/src/components/Navbar/Navbar.jsx",["73","74","75","76","77","78","79"],"/Users/sristichowdhury/Desktop/projects/stack-hack/client/src/components/auth/Login/Login.jsx",[],"/Users/sristichowdhury/Desktop/projects/stack-hack/client/src/components/auth/Signup/Signup.jsx",[],"/Users/sristichowdhury/Desktop/projects/stack-hack/client/src/components/Cart/Cart.jsx",["80"],"/Users/sristichowdhury/Desktop/projects/stack-hack/client/src/components/Home/Home.jsx",["81","82","83"],"import React, { useEffect } from 'react'\nimport Navbar from '../Navbar/Navbar'\nimport './homeStyles.css'\nimport pizza2 from '../../images/pizza2.jpg'\nimport { Link } from 'react-router-dom'\nimport { useState } from 'react'\n\n\n\nconst Home = () => {\n\n\n    // const {count}=cart;\n\n\n    const [loading,setLoading]=useState(true);\n    const [menu,setMenu]=useState('')\n\n    useEffect(()=>\n    {\n            setLoading(true)\n            fetch(\"http://localhost:8000/cafe/foodList\",\n            {\n                method:'get'\n            }).then(res=>res.json())\n            .then(res=>{\n                console.log(res)\n                setMenu(res.data.results.slice(1,7))\n                setLoading(false);\n            })\n            .catch(err=>alert(err))\n    },[])\n\n\n    const MenuContent = () =>\n    {\n         return (\n            <div className=\"menu-content\">\n           {menu!='' && menu.map(item=>\n            \n            {\n            return (\n                <div className=\"box\">\n                <div className=\"imgBx\">\n                    <img src={item.ItemImage.url} height=\"100px\"></img>\n                </div>\n                <div className=\"text\">\n                    <h3>{item.ItemName}</h3>\n                </div>\n            </div>\n                )\n            })\n            }\n             \n            </div>\n         \n         )\n    }\n    \n\n\n    return (\n        <div className=\"home-container\">\n            {loading?\n            <div className=\"spinner\">\n                <div class=\"spinner-grow text-info\" \n            role=\"status\">\n            <span class=\"sr-only\">Loading...</span>\n            <b/><br/>\n            <h4>Loading...</h4>\n          </div>\n            </div>\n            \n            :\n            <div>\n             <Navbar/>\n            \n            <section class=\"banner\" id=\"banner\">\n             <div class=\"content\">\n                 <h1>Welcome</h1>\n                 <p>Lorem ipsum, or lipsum as it is sometimes known, is dummy text used \n                     in laying out print, graphic or web designs. The passage is attributed to an unknown typesetter \n                     in the 15th century who is thought to have scrambled parts of Cicero's De \n                     Finibus Bonorum et Malorum for use in a type specimen book.</p>\n                 <button \n                 type=\"button\" className=\"btn\">\n                     <a href=\"#about\">Know More</a></button>\n             </div>\n            </section>     \n            \n            <section class=\"about\" id=\"about\">\n                <div className=\"row\">\n                    <div className=\"col-lg-7\">\n                       <img className=\"about-img\" src={pizza2}/>\n                    </div>\n                    <div className=\"col-lg-5\">\n                    <h2 class=\"about-title\"><span>A</span>bout Us</h2>\n                        <p>Lorem ipsum, or lipsum as it is sometimes known, is dummy text used \n                     in laying out print, graphic or web designs. The passage is attributed to an unknown typesetter \n                     in the 15th century who is thought to have scrambled parts of Cicero's De \n                     Finibus Bonorum et Malorum for use in a type specimen book.\n                     Lorem ipsum, or lipsum as it is sometimes known, is dummy text used \n                     in laying out print, graphic or web designs. The passage is attributed to an unknown typesetter \n                     in the 15th century who is thought to have scrambled parts of Cicero's De \n                     Finibus Bonorum et Malorum for use in a type specimen book.</p>\n                    </div>\n                </div>\n            </section>\n \n            <section className=\"menu\" id=\"menu\">\n                <div className=\"title\">\n                <h2 class=\"menu-title\"><span>M</span>enu</h2>\n                </div>\n                <MenuContent/>\n                   <Link to=\"/addDetails\">\n                    <button type=\"button\" \n                    className=\"btn\">\n                        View All</button></Link>\n                \n            </section>\n \n \n            <section class=\"contact\" id=\"contact\">\n                <div className=\"contact-title\">\n                    <h2><span>C</span>ontact Us</h2>\n                </div>\n                <div className=\"content\">\n                   \n                   <form class=\"contact-form\">\n                         <div class=\"form-group\">\n                         <div class=\"input-group flex-nowrap\">\n                                 <div class=\"input-group-prepend\">\n                                     <span class=\"input-group-text\" \n                                     id=\"addon-wrapping\"><i class=\"fa fa-user\"/></span>\n                                 </div>\n                                 <input type=\"text\" class=\"form-control\"\n                                  placeholder=\"Enter your username\"\n                                   aria-label=\"Username\" aria-describedby=\"addon-wrapping\"/>\n                                 </div>\n                         </div>\n \n                         <div class=\"form-group\">\n                         <div class=\"input-group flex-nowrap\">\n                                 <div class=\"input-group-prepend\">\n                                     <span class=\"input-group-text\" id=\"addon-wrapping\">\n                                         <i class=\"fa fa-envelope\"/>\n                                     </span>\n                                 </div>\n                                 <input type=\"email\" class=\"form-control\"\n                                  placeholder=\"Enter your mail address\" aria-describedby=\"addon-wrapping\"/>\n                                 </div>\n                         </div>\n                         \n                         <button type=\"submit\" class=\"btn\">Submit</button>\n                         </form>\n \n \n \n                        <div className=\"social-icons\">\n                            <ul>\n                                <li><a href=\"/\"><i class=\"fa fa-instagram\"/></a></li>\n                                <li><a href=\"/\"><i class=\"fa fa-facebook\"/></a></li>\n                                <li><a href=\"/\"><i class=\"fa fa-twitter\"/></a></li>\n                                <li><a href=\"/\"><i class=\"fa fa-github\"/></a></li>\n                            </ul>\n                        </div>\n                    \n \n \n                </div>\n                \n            </section>\n         </div>}\n           </div>\n    )\n}\n\nexport default Home\n","/Users/sristichowdhury/Desktop/projects/stack-hack/client/src/components/Forms/FormPage.jsx",["84","85","86","87","88","89","90","91"],"import React,{useState} from 'react'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Button,Form,Modal, Spinner } from 'react-bootstrap';\nimport {useHistory} from 'react-router-dom'\nimport Navbar from '../Navbar/Navbar';\nimport './formStyles.css'\n\n\nconst FormPage=()=>{\n    const [name,setName]=useState(\"\");\n    const [orgname,setOrgName]=useState(\"\");\n    const [eid,seteId]=useState(\"\");\n    const [phone,setPhone]=useState(\"\");\n    const [email,setEmail]=useState(\"\");\n    const [photo,setPhoto]=useState(\"\");\n    const [show, setShow] = useState(false);\n    const [previewImg,setPreviewImg]=useState('');\n    const [fileName,setFileName]=useState('');\n    const [validated, setValidated] = useState(false);\n    const history=useHistory();\n    \n    const [loading,setLoading]=useState(false);\n\n    \n\n\n  //function controlling the modal open/close\n  const showModal = (event) => {\n\n\n    const form = event.currentTarget;\n    if(!previewImg)\n          {\n\n            setLoading(false);\n            alert(\"Upload a user image!\");\n            return;\n          }\n    \n\n\n    //manual and regex validation\n\n    if(name=='' || orgname=='' \n    || phone=='' || eid=='' || email=='')\n    {\n      alert('Fill all the fields!');\n      return;\n    }\n\n\n    if(!/^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/.test(email))\n    {\n      alert('Email is incorrect!');\n      return;\n    }\n\n\n    //react-bootstrap validation\n\n    if (form.checkValidity() === false) {\n      event.preventDefault();\n      event.stopPropagation();\n      setValidated(true);\n    }\n    else\n    {\n      setValidated(true);\n      setShow(true)\n    }\n\n    \n\n    \n  };\n\n\n  //function which handles form data posting to the backend\n    const postform=(e)=>{\n      \n       setLoading(true)\n\n       //formdata created\n        const formData=new FormData();\n        formData.append('userImage',photo);\n        formData.append('name',name);\n        formData.append('orgName',orgname);\n        formData.append('email',email);\n        formData.append('empID',eid);\n        formData.append('phone',phone);\n\n\n        //makes a post request to save user details in the database\n          fetch(\"http://localhost:8000/add/uploadForm\",\n          {\n            method:'POST',\n            body:formData\n\n          }).then(res=>res.json())\n          .then(res=>\n            {\n                \n                if(!res.error)\n                {\n                  //if no error,redirected to success screen\n\n                  //set data to local storage incase of any netwrok issues\n                  // localStorage.setItem({'user':{res.data_id}})\n                  history.push(`/success/${res.data._id}`)\n                }\n            else\n            {\n              //error is displayed on the screen otherwise.\n               setLoading(false);\n               setShow(!show);\n               alert(res.error);\n            }\n            })\n          .catch(err=>{\n            alert(err.error);\n            setLoading(false);\n          })\n        \n    }\n  \n\n\n\n\n   //basic form to add all details\n    return (\n      <div className=\"form-container\">\n      <div className=\"home-container\">\n      \n      <Navbar/>\n\n        <section className=\"banner\" id=\"banner\">\n        <div className=\"form-div\">\n        <Form className=\"form\" \n        noValidate validated={validated}>\n          \n         <h3>Upload your Details!</h3>\n\n\n       <Form.Group controlId=\"formBasicName\">\n\n          <Form.Label className=\"label\">Name</Form.Label>\n\n          <Form.Control type=\"text\" \n          placeholder=\"Enter full name\" \n          onChange={(e)=>setName(e.target.value)} \n          required/>\n\n\n          <Form.Control.Feedback type=\"invalid\">Please enter your full name.</Form.Control.Feedback>\n          <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\n        \n        </Form.Group>\n          \n\n\n        <Form.Group controlId=\"formBasicOrganisation\">\n\n        <Form.Label  className=\"label\">Organisation Name</Form.Label>\n\n        <Form.Control type=\"text\" \n        placeholder=\"Enter organisation name\" \n        onChange={(event)=>setOrgName(event.target.value)} \n        required/>\n\n        <Form.Control.Feedback type=\"invalid\">Please enter your organisation name.</Form.Control.Feedback>\n        <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\n\n        </Form.Group>\n\n\n\n\n\n          <Form.Group controlId=\"formBasicId\">\n\n          <Form.Label  className=\"label\">Emplopyee ID No.</Form.Label>\n\n          <Form.Control type=\"number\" \n          placeholder=\"Enter Emplopyee ID No\" \n          onChange={(event)=>seteId(event.target.value)} \n          required/>\n\n          <Form.Control.Feedback type=\"invalid\">Please enter your employee ID No.</Form.Control.Feedback>\n          <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\n\n\n          </Form.Group>\n\n\n\n\n          <Form.Group controlId=\"formBasicPhone\">\n\n          <Form.Label  className=\"label\">Phone No.</Form.Label>\n\n          <Form.Control type=\"number\" \n          placeholder=\"Enter Phone No.\" \n          onChange={(event)=>setPhone(event.target.value)} required/>\n\n          <Form.Control.Feedback type=\"invalid\">Please enter a valid phone number.</Form.Control.Feedback>\n          <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\n\n\n          </Form.Group>\n\n\n          <Form.Group controlId=\"formBasicEmail\">\n\n          <Form.Label className=\"label\">Email address</Form.Label>\n\n          <Form.Control type=\"email\" \n          placeholder=\"Enter email\" \n          onChange={(event)=>setEmail(event.target.value)} \n          required/>\n\n          <Form.Text className=\"text-muted\">\n            We'll never share your email with anyone else.\n          </Form.Text>\n\n\n          <Form.Control.Feedback type=\"invalid\">Please enter your correct email ID.</Form.Control.Feedback>\n          <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\n\n\n          </Form.Group>\n\n          <Form.Group>\n\n          <Form.Label className=\"label\">Upload ID Card</Form.Label>\n\n          <Form.File id=\"exampleFormControlFile1\" \n            onChange={(event)=>\n            {\n              setPhoto(event.target.files[0])\n              setFileName(event.target.files[0].name)\n              setPreviewImg(URL.createObjectURL(event.target.files[0]))\n            }} \n            accept=\".jpg,.png,.jpeg\" \n          />       \n          </Form.Group>\n\n          <div className=\"upload-div\">\n          <Button for=\"exampleFormControlFile1\" \n          onClick={()=>{\n            document.querySelector('#exampleFormControlFile1')\n            .click();\n          }}type=\"button\" \n          className=\"upload-btn\"\n          >Upload</Button>\n          {fileName?<span>{fileName}</span>:<span>Choose an image</span>}\n</div>\n\n          <div className=\"form-submit\">\n        <Button  className=\"submit-btn\" \n        onClick={showModal} float=\"right\">\n          Submit\n        </Button>\n        </div>\n  \n        </Form>\n       \n        </div>\n       \n        </section>\n        <Modal\n          className=\"modal\"\n          show={show}\n          onHide={() => setShow(false)}\n          size=\"lg\"\n          aria-labelledby=\"example-custom-modal-styling-title\"\n        >\n          <Modal.Header closeButton className=\"modal-header\">\n            <Modal.Title id=\"example-custom-modal-styling-title\"\n            className=\"modal-title\">\n             Details Preview\n            </Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n\n          <div className=\"modalImage\">\n             <img src={previewImg}/>\n          </div>\n          <div className=\"modalText\">\n              <h4><span>Name :</span>{name}</h4>\n              <h4><span>Organisation Name :</span>{orgname}</h4>\n              <h4><span>Phone :</span>{phone!==undefined||phone!==null?phone:`  Add Phone No.`}</h4>\n              <h4><span>Employee ID :</span>{eid}</h4>\n              <h4><span>Email ID :</span>{email}</h4>\n          </div>\n\n\n\n            {loading?<Spinner animation=\"border\" role=\"status\" className=\"spinner\"/>:''}\n          </Modal.Body>\n          <Modal.Footer>\n            <Button onClick={postform} \n            className=\"modal-submit\">Submit</Button>\n            <Button onClick={()=>setShow(false)} \n            variant=\"secondary\"\n            className=\"modal-changes\">Make Changes</Button>\n          </Modal.Footer>\n        </Modal>\n  \n  \n      </div>\n    </div>\n    );\n}\n\n\nexport default FormPage","/Users/sristichowdhury/Desktop/projects/stack-hack/client/src/components/Success/Success.jsx",["92","93","94"],"import React,{useEffect, useState} from \"react\";\nimport { Button,Spinner } from \"react-bootstrap\";\nimport { Link,useParams } from \"react-router-dom\";\nimport './successStyles.css'\nimport success from './../../images/success.jpg'\nimport {connect} from 'react-redux'\n\n\n\n\nconst Success=({items})=>{\n\nconst {id}=useParams();\nconsole.log(items)\n\nconst [userImg,setUserImg]=useState('');\nconst [userData,setUserData]=useState('');\n\n//fetch data passed from home using state in history.push \nuseEffect(() => {\n    fetch(`http://localhost:8000/add/fetchDetails/${id}`,\n          {\n            method:'GET',\n\n          }).then(res=>res.json())\n          .then(res=>\n            {\n                //fetched user data is saved to the corresponding fields \n                setUserData(res.data);\n                setUserImg(res.data.image.replace(\"public\", \"\"));\n            })\n          .catch(err=>{\n            alert(err.error);\n          })\n}, [])\n\n\n\n//displays user data in jumbotron\nreturn(\n  <div className=\"success-container\">\n    {userData?\n    <div\n    className=\"success-div\">\n    <div className=\"success-vector\">\n      <img src={success}></img>\n    </div>\n    <br/>\n    <div className=\"success-text\">\n    <div className=\"reg-title\">\n      <h3>Great!</h3>\n      <p className=\"reg-details\">\n      <p>You have successfully completed your registration.\n       <br></br>Your Registration ID:<span style={{\n        fontSize:'1.4em',\n        color:'white',\n        fontWeight:'bolder'\n      }}>\n        {userData._id.substr(0,8)}\n      </span>\n      <span>(Kindly do not share this with anyone!)</span></p>\n      </p>\n      \n    </div>\n    <p className=\"link\">\n        <Link to=\n        {{\n          pathname:`/menu/${id}`,\n          state:\n          {\n            items:{items}\n          }}}>\n        <Button className=\"browse-button\"\n        >Browse Cafe Menu</Button>\n        </Link>\n        \n    </p>\n    </div>\n    </div>:<Spinner animation=\"border\" \n    role=\"status\" className=\"spinner\"/>}\n    \n    </div>\n    \n\n)\n\n}\n\n\n\n\nconst mapStatetoProps=(state)=>\n{\n\n  \n  return {\n    items: state.menu\n     }\n\n}\n\nexport default  connect(mapStatetoProps)(Success)","/Users/sristichowdhury/Desktop/projects/stack-hack/client/src/components/Cafe/Cafepage.jsx",["95","96","97"],"/Users/sristichowdhury/Desktop/projects/stack-hack/client/src/components/Cafe/CafePageItem.jsx",["98"],"import React from 'react'\nimport { useState } from 'react';\n\nimport { Card, Col} from \"react-bootstrap\";\nimport { Link } from 'react-router-dom';\n\nconst CafePageItem = ({item,addToCart,id}) => {\n\n  // console.log(item,addToCart)\n  const [flag,setFlag]=useState(false)\n    return (\n            <>\n                <Col lg={4} md={6} xs={12}>\n                <Card style={{marginBottom:'20px'}}>\n               <Card.Img\n               className=\"cardImage\"\n                 variant=\"top\"\n                 src={item.ItemImage.url}\n                 alt={item.ItemName}\n               />\n               <Card.Body>\n                 <Card.Title><h4>{item.ItemName}</h4>\n                 </Card.Title>\n\n                 <Card.Text>\n                   <h4 style={{display:'flex',justifyContent:'space-between'}}>\n                     <h5 style={{color:'gray'}}>Price</h5>\n                     <span>Rs.{item.Price}</span></h4>\n                 </Card.Text>\n               </Card.Body>\n               <Card.Footer>\n                {flag==false ? <button className=\"addToCart\"\n                  onClick={()=>\n                    {\n                      setFlag(true);\n                      addToCart(item.objectId)\n                  }}\n                 >Add to Cart</button> : \n                <Link to={`/cart/${id}`} >\n                <button className=\"addToCart\">\n                   View Bag</button></Link>\n                   }\n\n               </Card.Footer>\n             </Card>\n            </Col>\n            </>\n    )\n}\n\nexport default CafePageItem\n\n\n\n//store - data is stored,think of state\n//reducer - updates data and state based on actions displatched",{"ruleId":"99","replacedBy":"100"},{"ruleId":"101","replacedBy":"102"},{"ruleId":"103","severity":1,"message":"104","line":123,"column":49,"nodeType":"105","messageId":"106","endLine":123,"endColumn":51},{"ruleId":"103","severity":1,"message":"107","line":147,"column":17,"nodeType":"105","messageId":"106","endLine":147,"endColumn":19},{"ruleId":"103","severity":1,"message":"107","line":12,"column":17,"nodeType":"105","messageId":"106","endLine":12,"endColumn":19},{"ruleId":"103","severity":1,"message":"107","line":15,"column":56,"nodeType":"105","messageId":"106","endLine":15,"endColumn":58},{"ruleId":"103","severity":1,"message":"104","line":18,"column":59,"nodeType":"105","messageId":"106","endLine":18,"endColumn":61},{"ruleId":"103","severity":1,"message":"107","line":23,"column":31,"nodeType":"105","messageId":"106","endLine":23,"endColumn":33},{"ruleId":"103","severity":1,"message":"107","line":49,"column":17,"nodeType":"105","messageId":"106","endLine":49,"endColumn":19},{"ruleId":"103","severity":1,"message":"107","line":51,"column":54,"nodeType":"105","messageId":"106","endLine":51,"endColumn":56},{"ruleId":"103","severity":1,"message":"107","line":70,"column":17,"nodeType":"105","messageId":"106","endLine":70,"endColumn":19},{"ruleId":"103","severity":1,"message":"104","line":89,"column":61,"nodeType":"105","messageId":"106","endLine":89,"endColumn":63},{"ruleId":"103","severity":1,"message":"107","line":111,"column":17,"nodeType":"105","messageId":"106","endLine":111,"endColumn":19},{"ruleId":"103","severity":1,"message":"104","line":114,"column":59,"nodeType":"105","messageId":"106","endLine":114,"endColumn":61},{"ruleId":"108","severity":1,"message":"109","line":15,"column":11,"nodeType":"110","messageId":"111","endLine":15,"endColumn":16},{"ruleId":"108","severity":1,"message":"112","line":18,"column":12,"nodeType":"110","messageId":"111","endLine":18,"endColumn":18},{"ruleId":"103","severity":1,"message":"107","line":29,"column":15,"nodeType":"105","messageId":"106","endLine":29,"endColumn":17},{"ruleId":"103","severity":1,"message":"107","line":35,"column":30,"nodeType":"105","messageId":"106","endLine":35,"endColumn":32},{"ruleId":"103","severity":1,"message":"107","line":43,"column":30,"nodeType":"105","messageId":"106","endLine":43,"endColumn":32},{"ruleId":"113","severity":1,"message":"114","line":55,"column":4,"nodeType":"115","endLine":55,"endColumn":6,"suggestions":"116"},{"ruleId":"117","severity":1,"message":"118","line":74,"column":9,"nodeType":"119","endLine":75,"endColumn":25},{"ruleId":"108","severity":1,"message":"120","line":16,"column":20,"nodeType":"110","messageId":"111","endLine":16,"endColumn":30},{"ruleId":"103","severity":1,"message":"104","line":39,"column":17,"nodeType":"105","messageId":"106","endLine":39,"endColumn":19},{"ruleId":"117","severity":1,"message":"118","line":45,"column":21,"nodeType":"119","endLine":45,"endColumn":66},{"ruleId":"117","severity":1,"message":"118","line":94,"column":24,"nodeType":"119","endLine":94,"endColumn":65},{"ruleId":"103","severity":1,"message":"107","line":44,"column":12,"nodeType":"105","messageId":"106","endLine":44,"endColumn":14},{"ruleId":"103","severity":1,"message":"107","line":44,"column":27,"nodeType":"105","messageId":"106","endLine":44,"endColumn":29},{"ruleId":"103","severity":1,"message":"107","line":45,"column":13,"nodeType":"105","messageId":"106","endLine":45,"endColumn":15},{"ruleId":"103","severity":1,"message":"107","line":45,"column":24,"nodeType":"105","messageId":"106","endLine":45,"endColumn":26},{"ruleId":"103","severity":1,"message":"107","line":45,"column":37,"nodeType":"105","messageId":"106","endLine":45,"endColumn":39},{"ruleId":"121","severity":1,"message":"122","line":52,"column":19,"nodeType":"123","messageId":"124","endLine":52,"endColumn":20,"suggestions":"125"},{"ruleId":"121","severity":1,"message":"122","line":52,"column":44,"nodeType":"123","messageId":"124","endLine":52,"endColumn":45,"suggestions":"126"},{"ruleId":"117","severity":1,"message":"118","line":287,"column":14,"nodeType":"119","endLine":287,"endColumn":37},{"ruleId":"108","severity":1,"message":"127","line":16,"column":8,"nodeType":"110","messageId":"111","endLine":16,"endColumn":15},{"ruleId":"113","severity":1,"message":"128","line":35,"column":4,"nodeType":"115","endLine":35,"endColumn":6,"suggestions":"129"},{"ruleId":"117","severity":1,"message":"118","line":46,"column":7,"nodeType":"119","endLine":46,"endColumn":26},{"ruleId":"108","severity":1,"message":"130","line":18,"column":16,"nodeType":"110","messageId":"111","endLine":18,"endColumn":26},{"ruleId":"108","severity":1,"message":"131","line":19,"column":18,"nodeType":"110","messageId":"111","endLine":19,"endColumn":30},{"ruleId":"103","severity":1,"message":"107","line":124,"column":24,"nodeType":"105","messageId":"106","endLine":124,"endColumn":26},{"ruleId":"103","severity":1,"message":"107","line":32,"column":22,"nodeType":"105","messageId":"106","endLine":32,"endColumn":24},"no-native-reassign",["132"],"no-negated-in-lhs",["133"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","Expected '===' and instead saw '=='.","no-unused-vars","'setId' is assigned a value but never used.","Identifier","unusedVar","'setLoc' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'loc'. Either include it or remove the dependency array.","ArrayExpression",["134"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'setproduct' is assigned a value but never used.","no-useless-escape","Unnecessary escape character: \\[.","Literal","unnecessaryEscape",["135","136"],["137","138"],"'userImg' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.",["139"],"'setLoading' is assigned a value but never used.","'setFoodItems' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"140","fix":"141"},{"messageId":"142","fix":"143","desc":"144"},{"messageId":"145","fix":"146","desc":"147"},{"messageId":"142","fix":"148","desc":"144"},{"messageId":"145","fix":"149","desc":"147"},{"desc":"150","fix":"151"},"Update the dependencies array to be: [loc]",{"range":"152","text":"153"},"removeEscape",{"range":"154","text":"155"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"156","text":"157"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"158","text":"155"},{"range":"159","text":"157"},"Update the dependencies array to be: [id]",{"range":"160","text":"161"},[1485,1487],"[loc]",[1270,1271],"",[1270,1270],"\\",[1295,1296],[1295,1295],[934,936],"[id]"]