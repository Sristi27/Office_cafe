{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/sristichowdhury/Desktop/projects/stack-hack/client/src/components/FormPage.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Button, Form, Modal, Spinner } from 'react-bootstrap';\nimport { useHistory } from 'react-router-dom';\nimport Navbar from './Navbar/Navbar';\n\nconst FormPage = () => {\n  _s();\n\n  const [name, setName] = useState(\"\");\n  const [orgname, setOrgName] = useState(\"\");\n  const [eid, seteId] = useState(\"\");\n  const [phone, setPhone] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [photo, setPhoto] = useState(\"\");\n  const [show, setShow] = useState(false);\n  const [previewImg, setPreviewImg] = useState('');\n  const [validated, setValidated] = useState(false);\n  const history = useHistory();\n  const [loading, setLoading] = useState(false); //creates image URL to be displayed on the preview screen\n\n  const uploadImage = e => {\n    setLoading(true);\n    e.preventDefault();\n\n    if (!photo) {\n      setLoading(false);\n      alert(\"Upload a user image!\");\n      return;\n    }\n\n    setPreviewImg(URL.createObjectURL(photo));\n    setLoading(false);\n    alert(\"Image Uploaded\");\n  }; //function controlling the modal open/close\n\n\n  const showModal = event => {\n    const form = event.currentTarget;\n\n    if (!photo) {\n      setLoading(false);\n      alert(\"Upload a user image!\");\n      return;\n    } //manual and regex validation\n\n\n    if (name == '' || orgname == '' || phone == '' || eid == '' || email == '') {\n      alert('Fill all the fields!');\n      return;\n    }\n\n    if (!/^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/.test(email)) {\n      alert('Email is incorrect!');\n      return;\n    } //react-bootstrap validation\n\n\n    if (form.checkValidity() === false) {\n      event.preventDefault();\n      event.stopPropagation();\n      setValidated(true);\n    } else {\n      setValidated(true);\n      setShow(true);\n    }\n  }; //function which handles form data posting to the backend\n\n\n  const postform = e => {\n    setLoading(true); //formdata created\n\n    const formData = new FormData();\n    formData.append('userImage', photo);\n    formData.append('name', name);\n    formData.append('orgName', orgname);\n    formData.append('email', email);\n    formData.append('empID', eid);\n    formData.append('phone', phone); //makes a post request to save user details in the database\n\n    fetch(\"http://localhost:8000/add/uploadForm\", {\n      method: 'POST',\n      body: formData\n    }).then(res => res.json()).then(res => {\n      if (!res.error) {\n        //if no error,redirected to success screen\n        history.push(`/success/${res.data._id}`);\n      } else {\n        //error is displayed on the screen otherwise.\n        setLoading(false);\n        setShow(!show);\n        alert(res.error);\n      }\n    }).catch(err => {\n      alert(err.error);\n      setLoading(false);\n    });\n  }; //basic form to add all details\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      backgroundColor: 'black'\n    },\n    classname: true,\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      style: {\n        width: \"70%\",\n        margin: \"2% auto\",\n        padding: \"2% 5%\",\n        border: \"1px\",\n        borderRadius: \"1rem\",\n        background: \"#f8f1f1\"\n      },\n      noValidate: true,\n      validated: validated,\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Add Details \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 8\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"formBasicName\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"text\",\n          placeholder: \"Enter full name\",\n          onChange: e => setName(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n          type: \"invalid\",\n          children: \"Please enter your full name.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n          children: \"Looks good!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 8\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"formBasicOrganisation\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Organisation Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"text\",\n          placeholder: \"Enter organisation name\",\n          onChange: event => setOrgName(event.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n          type: \"invalid\",\n          children: \"Please enter your organisation name.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n          children: \"Looks good!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"formBasicId\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Emplopyee ID No.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"number\",\n          placeholder: \"Enter Emplopyee ID No\",\n          onChange: event => seteId(event.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n          type: \"invalid\",\n          children: \"Please enter your employee ID No.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n          children: \"Looks good!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"formBasicPhone\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Phone No.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"number\",\n          placeholder: \"Enter Phone No.\",\n          onChange: event => setPhone(event.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n          type: \"invalid\",\n          children: \"Please enter a valid phone number.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n          children: \"Looks good!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"formBasicEmail\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Email address\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"email\",\n          placeholder: \"Enter email\",\n          onChange: event => setEmail(event.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Text, {\n          className: \"text-muted\",\n          children: \"We'll never share your email with anyone else.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n          type: \"invalid\",\n          children: \"Please enter your correct email ID.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n          children: \"Looks good!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Upload ID Card\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.File, {\n          id: \"exampleFormControlFile1\",\n          onChange: event => {\n            setPhoto(event.target.files[0]);\n          },\n          accept: \".jpg,.png,.jpeg\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"button\",\n        variant: \"primary\",\n        onClick: uploadImage,\n        children: \"Upload Image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"primary\",\n        onClick: showModal,\n        float: \"right\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 8\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      className: \"modal\",\n      show: show,\n      onHide: () => setShow(false),\n      size: \"lg\",\n      \"aria-labelledby\": \"example-custom-modal-styling-title\",\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        closeButton: true,\n        children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n          id: \"example-custom-modal-styling-title\",\n          children: \"Details Preview\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 284,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 283,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"modalText\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: previewImg\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 291,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"Name:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 292,\n              columnNumber: 19\n            }, this), name]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 292,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"Organisation Name:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 293,\n              columnNumber: 19\n            }, this), orgname]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 293,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"Phone:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 294,\n              columnNumber: 19\n            }, this), phone !== undefined || phone !== null ? phone : `  Add Phone No.`]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 294,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"Employee ID:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 295,\n              columnNumber: 19\n            }, this), eid]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 295,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"Email ID:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 296,\n              columnNumber: 19\n            }, this), email]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 296,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 290,\n          columnNumber: 11\n        }, this), loading ? /*#__PURE__*/_jsxDEV(Spinner, {\n          animation: \"border\",\n          role: \"status\",\n          className: \"spinner\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 298,\n          columnNumber: 22\n        }, this) : '']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 288,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: postform,\n          variant: \"primary\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 301,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => setShow(false),\n          variant: \"secondary\",\n          children: \"Make Changes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 302,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 300,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 276,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 150,\n    columnNumber: 7\n  }, this);\n};\n\n_s(FormPage, \"geVfBVJIRm2DsEZ/9JU1qfvcczU=\", false, function () {\n  return [useHistory];\n});\n\n_c = FormPage;\nexport default FormPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"FormPage\");","map":{"version":3,"sources":["/Users/sristichowdhury/Desktop/projects/stack-hack/client/src/components/FormPage.jsx"],"names":["React","useState","Button","Form","Modal","Spinner","useHistory","Navbar","FormPage","name","setName","orgname","setOrgName","eid","seteId","phone","setPhone","email","setEmail","photo","setPhoto","show","setShow","previewImg","setPreviewImg","validated","setValidated","history","loading","setLoading","uploadImage","e","preventDefault","alert","URL","createObjectURL","showModal","event","form","currentTarget","test","checkValidity","stopPropagation","postform","formData","FormData","append","fetch","method","body","then","res","json","error","push","data","_id","catch","err","backgroundColor","width","margin","padding","border","borderRadius","background","target","value","files","undefined"],"mappings":"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","sourcesContent":["import React,{useState} from 'react'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Button,Form,Modal, Spinner } from 'react-bootstrap';\nimport {useHistory} from 'react-router-dom'\nimport Navbar from './Navbar/Navbar';\n\n\n\nconst FormPage=()=>{\n    const [name,setName]=useState(\"\");\n    const [orgname,setOrgName]=useState(\"\");\n    const [eid,seteId]=useState(\"\");\n    const [phone,setPhone]=useState(\"\");\n    const [email,setEmail]=useState(\"\");\n    const [photo,setPhoto]=useState(\"\");\n    const [show, setShow] = useState(false);\n    const [previewImg,setPreviewImg]=useState('');\n    const [validated, setValidated] = useState(false);\n    const history=useHistory();\n    \n    const [loading,setLoading]=useState(false);\n\n    \n\n\n    //creates image URL to be displayed on the preview screen\n    const uploadImage = (e) =>\n    {\n          setLoading(true)\n          e.preventDefault();\n\n          if(!photo)\n          {\n\n            setLoading(false);\n            alert(\"Upload a user image!\");\n            return;\n          }\n          \n          setPreviewImg(URL.createObjectURL(photo));\n          setLoading(false);\n          alert(\"Image Uploaded\");\n\n\n    }\n\n\n\n  //function controlling the modal open/close\n  const showModal = (event) => {\n\n\n    const form = event.currentTarget;\n    if(!photo)\n          {\n\n            setLoading(false);\n            alert(\"Upload a user image!\");\n            return;\n          }\n    \n\n\n    //manual and regex validation\n\n    if(name=='' || orgname=='' || phone=='' || eid=='' || email=='')\n    {\n      alert('Fill all the fields!');\n      return;\n    }\n\n\n    if(!/^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/.test(email))\n    {\n      alert('Email is incorrect!');\n      return;\n    }\n\n\n    //react-bootstrap validation\n\n    if (form.checkValidity() === false) {\n      event.preventDefault();\n      event.stopPropagation();\n      setValidated(true);\n    }\n    else\n    {\n      setValidated(true);\n      setShow(true)\n    }\n\n    \n\n    \n  };\n\n\n  //function which handles form data posting to the backend\n    const postform=(e)=>{\n      \n       setLoading(true)\n\n       //formdata created\n        const formData=new FormData();\n        formData.append('userImage',photo);\n        formData.append('name',name);\n        formData.append('orgName',orgname);\n        formData.append('email',email);\n        formData.append('empID',eid);\n        formData.append('phone',phone);\n\n\n        //makes a post request to save user details in the database\n          fetch(\"http://localhost:8000/add/uploadForm\",\n          {\n            method:'POST',\n            body:formData\n\n          }).then(res=>res.json())\n          .then(res=>\n            {\n                \n                if(!res.error)\n                {\n                  //if no error,redirected to success screen\n                  history.push(`/success/${res.data._id}`)\n                }\n            else\n            {\n              //error is displayed on the screen otherwise.\n               setLoading(false);\n               setShow(!show);\n               alert(res.error);\n            }\n            })\n          .catch(err=>{\n            alert(err.error);\n            setLoading(false);\n          })\n        \n    }\n  \n\n\n\n\n   //basic form to add all details\n    return (\n      <div style={{backgroundColor:'black'}} classname>\n      \n      <Navbar/>\n\n       <Form \n       style={{width:\"70%\",margin:\"2% auto\",padding:\"2% 5%\",border:\"1px\",borderRadius:\"1rem\",background:\"#f8f1f1\"}}\n       noValidate validated={validated}>\n\n\n       <h3>Add Details </h3>\n\n\n       <Form.Group controlId=\"formBasicName\">\n\n          <Form.Label >Name</Form.Label>\n\n          <Form.Control type=\"text\" \n          placeholder=\"Enter full name\" \n          onChange={(e)=>setName(e.target.value)} \n          required/>\n\n\n          <Form.Control.Feedback type=\"invalid\">Please enter your full name.</Form.Control.Feedback>\n          <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\n        \n        </Form.Group>\n          \n\n\n        <Form.Group controlId=\"formBasicOrganisation\">\n\n        <Form.Label >Organisation Name</Form.Label>\n\n        <Form.Control type=\"text\" \n        placeholder=\"Enter organisation name\" \n        onChange={(event)=>setOrgName(event.target.value)} \n        required/>\n\n        <Form.Control.Feedback type=\"invalid\">Please enter your organisation name.</Form.Control.Feedback>\n        <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\n\n        </Form.Group>\n\n\n\n\n\n          <Form.Group controlId=\"formBasicId\">\n\n          <Form.Label >Emplopyee ID No.</Form.Label>\n\n          <Form.Control type=\"number\" \n          placeholder=\"Enter Emplopyee ID No\" \n          onChange={(event)=>seteId(event.target.value)} \n          required/>\n\n          <Form.Control.Feedback type=\"invalid\">Please enter your employee ID No.</Form.Control.Feedback>\n          <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\n\n\n          </Form.Group>\n\n\n\n\n          <Form.Group controlId=\"formBasicPhone\">\n\n          <Form.Label >Phone No.</Form.Label>\n\n          <Form.Control type=\"number\" \n          placeholder=\"Enter Phone No.\" \n          onChange={(event)=>setPhone(event.target.value)} required/>\n\n          <Form.Control.Feedback type=\"invalid\">Please enter a valid phone number.</Form.Control.Feedback>\n          <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\n\n\n          </Form.Group>\n\n\n          <Form.Group controlId=\"formBasicEmail\">\n\n          <Form.Label>Email address</Form.Label>\n\n          <Form.Control type=\"email\" \n          placeholder=\"Enter email\" \n          onChange={(event)=>setEmail(event.target.value)} \n          required/>\n\n          <Form.Text className=\"text-muted\">\n            We'll never share your email with anyone else.\n          </Form.Text>\n\n\n          <Form.Control.Feedback type=\"invalid\">Please enter your correct email ID.</Form.Control.Feedback>\n          <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\n\n\n          </Form.Group>\n\n          <Form.Group>\n\n          <Form.Label>Upload ID Card</Form.Label>\n\n          <Form.File id=\"exampleFormControlFile1\" \n          onChange={(event)=>{setPhoto(event.target.files[0])}} \n          accept=\".jpg,.png,.jpeg\" \n          />       \n          </Form.Group>\n\n          <Button type=\"button\" \n          variant=\"primary\" \n          onClick={uploadImage}>Upload Image</Button>\n\n          <br/>\n          <br/>\n        \n        <Button variant=\"primary\" onClick={showModal} float=\"right\">\n          Submit\n        </Button>\n  \n        </Form>\n     \n  \n       \n        \n        <Modal\n          className=\"modal\"\n          show={show}\n          onHide={() => setShow(false)}\n          size=\"lg\"\n          aria-labelledby=\"example-custom-modal-styling-title\"\n        >\n          <Modal.Header closeButton>\n            <Modal.Title id=\"example-custom-modal-styling-title\">\n             Details Preview\n            </Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n\n          <p className=\"modalText\">\n            <img src={previewImg}/>\n              <h4><span>Name:</span>{name}</h4>\n              <h4><span>Organisation Name:</span>{orgname}</h4>\n              <h4><span>Phone:</span>{phone!==undefined||phone!==null?phone:`  Add Phone No.`}</h4>\n              <h4><span>Employee ID:</span>{eid}</h4>\n              <h4><span>Email ID:</span>{email}</h4>\n            </p>\n            {loading?<Spinner animation=\"border\" role=\"status\" className=\"spinner\"/>:''}\n          </Modal.Body>\n          <Modal.Footer>\n            <Button onClick={postform} variant=\"primary\">Submit</Button>\n            <Button onClick={()=>setShow(false)} variant=\"secondary\">Make Changes</Button>\n          </Modal.Footer>\n        </Modal>\n  \n  \n      </div>\n    );\n}\n\n\nexport default FormPage"]},"metadata":{},"sourceType":"module"}