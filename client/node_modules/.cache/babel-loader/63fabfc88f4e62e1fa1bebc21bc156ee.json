{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/sristichowdhury/Desktop/projects/stack-hack/client/src/App.js\";\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport FormPage from \"./components/screens/Forms/FormPage\";\nimport Success from \"./components/Success\";\nimport Cafepage from \"./components/Cafepage\";\nimport Home from './components/Home/Home';\nimport Signup from './components/auth/Signup/Signup';\nimport Login from './components/auth/Login/Login';\nimport Cart from './components/screens/Cart/Cart';\nimport React from 'react';\nimport Navbar from './components/Navbar/Navbar';\nimport { createStore } from 'redux';\nimport { reducer } from './reducer'; //react redux - provider wraps app,connect used in components\n\nimport { Provider } from 'react-redux'; //store.getstate()\n//initial store\n\nconst initialStore = {\n  cart: [],\n  total: 0,\n  amount: 0\n}; //pass initial store\n\nconst store = createStore(reducer, initialStore); //dispatch method- send actions to store\n//actions(objet) - must have type prop with string value- what kinf od action ex- increase deelete\n//dont mutate the state\n// store.dispatch({type:'DECREASE'})\n//get store\n// console.log(store.getState())\n//gives me initial store\n// reducer function \n//two args-state,action\n//state- old state/state before update\n//action- what happened/what update\n//return updated state or old state\n//handles the routes\n\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(Provider, {\n    children: /*#__PURE__*/_jsxDEV(BrowserRouter, {\n      children: /*#__PURE__*/_jsxDEV(Switch, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 3\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 1\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 1\n  }, this);\n}\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/sristichowdhury/Desktop/projects/stack-hack/client/src/App.js"],"names":["BrowserRouter","Route","Switch","FormPage","Success","Cafepage","Home","Signup","Login","Cart","React","Navbar","createStore","reducer","Provider","initialStore","cart","total","amount","store","App"],"mappings":";;AAAA,OAAO,WAAP;AACA,OAAO,sCAAP;AACA,SAAQA,aAAR,EAAsBC,KAAtB,EAA4BC,MAA5B,QAAyC,kBAAzC;AAEA,OAAOC,QAAP,MAAqB,qCAArB;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,MAAP,MAAmB,iCAAnB;AACA,OAAOC,KAAP,MAAkB,+BAAlB;AACA,OAAOC,IAAP,MAAiB,gCAAjB;AAEA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAOC,MAAP,MAAmB,4BAAnB;AAIA,SAAQC,WAAR,QAA0B,OAA1B;AACA,SAAQC,OAAR,QAAsB,WAAtB,C,CAIA;;AACA,SAAQC,QAAR,QAAuB,aAAvB,C,CAGA;AAGA;;AACA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,IAAI,EAAC,EADc;AAEnBC,EAAAA,KAAK,EAAC,CAFa;AAGnBC,EAAAA,MAAM,EAAC;AAHY,CAArB,C,CAUA;;AACA,MAAMC,KAAK,GAACP,WAAW,CAACC,OAAD,EAASE,YAAT,CAAvB,C,CAEA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAIA;;AACA,SAASK,GAAT,GAAe;AAEb,sBACF,QAAC,QAAD;AAAA,2BACA,QAAC,aAAD;AAAA,6BACE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,UADE;AAUD;;KAZQA,G;AAcT,eAAeA,GAAf","sourcesContent":["import './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport {BrowserRouter,Route,Switch} from 'react-router-dom'\n\nimport FormPage from \"./components/screens/Forms/FormPage\"\nimport Success from \"./components/Success\";\nimport Cafepage from \"./components/Cafepage\" \nimport Home from './components/Home/Home';\nimport Signup from './components/auth/Signup/Signup';\nimport Login from './components/auth/Login/Login';\nimport Cart from './components/screens/Cart/Cart';\n\nimport React from 'react';\n\nimport Navbar from './components/Navbar/Navbar';\n\n\n\nimport {createStore} from 'redux';\nimport {reducer} from './reducer'\n\n\n\n//react redux - provider wraps app,connect used in components\nimport {Provider} from 'react-redux';\n\n\n//store.getstate()\n\n\n//initial store\nconst initialStore = {\n  cart:[],\n  total:0,\n  amount:0\n}\n\n\n\n\n\n//pass initial store\nconst store=createStore(reducer,initialStore);\n\n//dispatch method- send actions to store\n//actions(objet) - must have type prop with string value- what kinf od action ex- increase deelete\n//dont mutate the state\n\n// store.dispatch({type:'DECREASE'})\n\n//get store\n// console.log(store.getState())\n//gives me initial store\n\n// reducer function \n//two args-state,action\n//state- old state/state before update\n//action- what happened/what update\n//return updated state or old state\n\n\n\n//handles the routes\nfunction App() {\n\n  return(\n<Provider>\n<BrowserRouter>\n  <Switch>\n  \n  </Switch>\n</BrowserRouter>\n</Provider>\n  )\n\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}