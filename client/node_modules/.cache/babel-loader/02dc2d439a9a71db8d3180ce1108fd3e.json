{"ast":null,"code":"export const reducer = (state, action) => {\n  //default action passed initially\n  //state undefined initially\n  //2 return options\n  //old state or updated state\n  // console.log({state,action})\n  if (action.type == 'DECREASE_ITEM') {\n    let flag = false;\n    let existedItem = state.cart.find(item => item.objectId == action.payload); //find that item and den decrease    \n\n    let newmenu = state.cart.filter(item => item.objectId != action.payload);\n    let items = [...state.cart];\n    let newItems = items.filter(item => {\n      if (item.objectId === action.payload) {\n        item.quantity -= 1;\n        if (item.quantity == 0) flag = true;\n      }\n\n      return item;\n    }); //if quantity is 0 dont return that item in the menu\n\n    if (flag) {\n      return { ...state,\n        cart: newmenu,\n        amount: state.amount - existedItem.Price,\n        total: state.total - 1\n      };\n    } //else return the updated menu\n    else {\n        return { ...state,\n          cart: newItems,\n          amount: state.amount - existedItem.Price,\n          total: state.total - 1\n        };\n      }\n  }\n\n  if (action.type == 'INCREASE_ITEM') {\n    let addedItem = state.cart.find(item => item.objectId == action.payload);\n    let items = [...state.cart];\n    let newItems = items.filter(item => {\n      if (item.objectId === action.payload) {\n        item.quantity += 1;\n      }\n\n      return item;\n    });\n    return { ...state,\n      cart: newItems,\n      amount: state.amount + addedItem.Price,\n      total: state.total + 1\n    };\n  }\n\n  if (action.type == 'CLEAR_CART') {\n    return { ...state,\n      menu: [],\n      total: 0,\n      amount: 0\n    };\n  }\n\n  if (action.type === \"ADD_TO_CART\") {\n    // console.log(state.cart,state.menu)\n    let addedItem = state.menu.find(item => item.objectId === action.payload);\n    let existedItem = state.cart.find(item => item.objectId === action.payload); // console.log(addedItem,existedItem)\n\n    if (existedItem) {\n      let newmenu = state.cart.filter(item => item.objectId != action.payload); ///takes out the increase quantity item\n\n      existedItem.quantity = existedItem.quantity + 1;\n      newmenu.push(existedItem);\n      return { ...state,\n        cart: newmenu,\n        amount: state.amount + addedItem.Price,\n        total: state.total + 1\n      };\n    } else {\n      addedItem = { ...addedItem,\n        quantity: 1\n      };\n      return { ...state,\n        cart: [...state.cart, addedItem],\n        amount: state.amount + addedItem.Price,\n        total: state.total + 1\n      };\n    }\n  }\n\n  if (action.type == 'REMOVE_ITEM') {\n    let itemToRemove = state.cart.find(item => item.objectId === action.payload);\n    let new_items = state.cart.filter(item => item.objectId != action.payload); //calculating the total\n\n    let newTotal = state.total - itemToRemove.quantity; //calculate amount\n\n    let newAmount = state.amount - itemToRemove.Price * itemToRemove.quantity;\n    console.log(itemToRemove);\n    return { ...state,\n      cart: new_items,\n      total: newTotal,\n      amount: newAmount\n    };\n  } ///as a default always return the original stae(old state-before updation)\n\n\n  return state;\n};","map":{"version":3,"sources":["/Users/sristichowdhury/Desktop/projects/stack-hack/client/src/reducer.js"],"names":["reducer","state","action","type","flag","existedItem","cart","find","item","objectId","payload","newmenu","filter","items","newItems","quantity","amount","Price","total","addedItem","menu","push","itemToRemove","new_items","newTotal","newAmount","console","log"],"mappings":"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","sourcesContent":["export const reducer = (state,action) =>\n{\n\n  //default action passed initially\n  //state undefined initially\n\n  //2 return options\n  //old state or updated state\n  // console.log({state,action})\n\n\n  if(action.type=='DECREASE_ITEM')\n  {\n    let flag=false;\n    let existedItem=state.cart.find(item=>item.objectId==action.payload)\n\n    //find that item and den decrease    \n    let newmenu = state.cart.filter(item => item.objectId != action.payload);\n    let items = [...state.cart];\n    let newItems = items.filter((item) => {\n          if (item.objectId === action.payload) {\n              item.quantity-=1;\n              if(item.quantity==0)\n              flag=true;\n            }\n\n            return item;\n        });\n    \n        //if quantity is 0 dont return that item in the menu\n      if(flag)\n      {\n        return {...state,\n          cart:newmenu,\n          amount:state.amount-existedItem.Price,\n          total:state.total-1\n        }}\n      \n        //else return the updated menu\n      else\n      {\n        return {...state,\n        cart:newItems,\n        amount:state.amount-existedItem.Price,\n        total:state.total-1}}\n    \n  }\n\n  if(action.type=='INCREASE_ITEM')\n  {\n    let addedItem=state.cart.find(item=>item.objectId==action.payload)\n    let items = [...state.cart];\n    \n    let newItems = items.filter((item) => {\n          if (item.objectId === action.payload) {\n              item.quantity+=1;\n            }\n\n            return item;\n        });\n    \n    return {...state,\n        cart:newItems,\n        amount:state.amount+addedItem.Price,\n        total:state.total+1}\n  }\n\n  if(action.type=='CLEAR_CART')\n  {\n    return{\n            ...state,\n            menu: [],\n            total: 0,\n            amount:0\n          }\n  }\n\n\n  if(action.type===\"ADD_TO_CART\")\n  {\n    // console.log(state.cart,state.menu)\n    let addedItem=state.menu.find(item=>item.objectId===action.payload);\n    let existedItem=state.cart.find(item=>item.objectId===action.payload);\n    // console.log(addedItem,existedItem)\n    if(existedItem)\n    {\n      let newmenu = state.cart.filter(item => item.objectId != action.payload);\n      ///takes out the increase quantity item\n      existedItem.quantity = existedItem.quantity+1;\n      newmenu.push(existedItem);\n\n      return {...state,cart:newmenu,\n        amount:state.amount+addedItem.Price,\n        total:state.total+1}\n    }\n    else\n    {\n       addedItem={...addedItem,quantity:1}\n       return {...state,\n        cart:[...state.cart,addedItem],\n        amount:state.amount+addedItem.Price,\n        total:state.total+1\n      }\n    }\n  }\n\n  if(action.type=='REMOVE_ITEM')\n  {\n    let itemToRemove= state.cart.find(item=>item.objectId===action.payload)\n    let new_items = state.cart.filter(item=> item.objectId!=action.payload)\n        \n    //calculating the total\n    let newTotal = state.total - (itemToRemove.quantity )\n    //calculate amount\n    let newAmount = state.amount - (itemToRemove.Price * itemToRemove.quantity )\n    console.log(itemToRemove)\n    return{\n            ...state,\n            cart: new_items,\n            total: newTotal,\n            amount:newAmount\n          }\n  }\n\n  \n  ///as a default always return the original stae(old state-before updation)\n  return state;\n}"]},"metadata":{},"sourceType":"module"}