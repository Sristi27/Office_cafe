{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/sristichowdhury/Desktop/checking-1/client/src/components/Cafepage.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport LoadingOverlay from 'react-loading-overlay';\nimport { Card, CardDeck, Col, Container, Row, Button, Spinner } from \"react-bootstrap\";\nimport { MdDelete } from 'react-icons/md';\nimport CafeNav from \"./CafeNav\";\nimport { useParams } from \"react-router-dom\";\n\nconst Cafepage = () => {\n  _s();\n\n  const {\n    id\n  } = useParams();\n  const [cart, setCart] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [foodItems, setFoodItems] = useState('');\n  const [total, setTotal] = useState(0); //calls the route on the backend which saves the food array to the database and returns the items.\n\n  useEffect(() => {\n    fetch(\"http://localhost:5000/cafe/foodList\", {\n      method: 'POST'\n    }).then(res => res.json()).then(res => {\n      setFoodItems(res.items); //returned data is stored in foodItems\n\n      setLoading(false);\n    }).catch(err => alert(err)); // console.log(JSON.parse(localStorage.getItem('cart')));\n  }, []); //add to cart functionality is implemented\n\n  const addToCart = (itemName, price, quantity) => {\n    //if cart is not empty then we check if the added item is already present in the cafe or not.\n    if (cart.length != 0) {\n      var item = cart.find(({\n        name\n      }) => name === itemName); //If present,we simply increase the quantity and add up the price\n\n      if (item) {\n        item.quantity = item.quantity + 1;\n        item.price = item.price + price;\n        setTotal(total + price);\n        setCart(cart);\n      } //else we create a new item and push it to the existing array\n      else {\n          setCart([...cart, {\n            name: itemName,\n            price,\n            quantity\n          }]);\n          setTotal(total + price);\n        }\n    } //else we create a new item and push into the empty array\n    else {\n        setCart([...cart, {\n          name: itemName,\n          price,\n          quantity\n        }]);\n        setTotal(total + price);\n      }\n\n    localStorage.setItem('cart', JSON.stringify(cart));\n  }; //loading spinner\n\n\n  const Spin = ({\n    message\n  }) => {\n    return /*#__PURE__*/_jsxDEV(LoadingOverlay, {\n      active: loading,\n      spinner: true,\n      text: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this);\n  }; //renders UI when the cart is empty\n\n\n  const Empty = () => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Your Cart is Empty\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 1\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this);\n  }; //implemented the delete functionality using this function\n\n\n  const deleteFromCart = itemName => {\n    var item = cart.find(({\n      name\n    }) => name === itemName);\n    var newcart = cart.filter(item => item.name != itemName);\n    console.log(newcart);\n    setTotal(total - item.price);\n    setCart(newcart);\n  }; //completely clears the cart if there are existing items\n\n\n  const clearCart = () => {\n    setCart([]);\n    setTotal(0);\n  }; //This function starts a timer for an interval(takeaway time for the order)\n\n\n  const pay = () => {\n    setLoading(true);\n    alert('Payment Processing!');\n    setTimeout(() => {\n      setLoading(false);\n      clearCart();\n      alert(\"Payment Completed...Enjoy your meal!\");\n    }, 3000);\n  };\n\n  const FoodGrid = ({\n    item\n  }) => {\n    return /*#__PURE__*/_jsxDEV(Col, {\n      xs: 6,\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        style: {\n          marginBottom: '20px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Card.Img, {\n          className: \"cardImage\",\n          variant: \"top\",\n          src: item.image\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 4\n        }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n          children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n            children: /*#__PURE__*/_jsxDEV(\"h4\", {\n              children: item.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 157,\n              columnNumber: 18\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 6\n          }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n            children: /*#__PURE__*/_jsxDEV(\"h4\", {\n              style: {\n                display: 'flex',\n                justifyContent: 'space-between'\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n                style: {\n                  color: 'gray'\n                },\n                children: \"Price\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 160,\n                columnNumber: 10\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: [\"Rs.\", item.price]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 161,\n                columnNumber: 10\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 159,\n              columnNumber: 8\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 6\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 4\n        }, this), /*#__PURE__*/_jsxDEV(Card.Footer, {\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            style: {\n              float: 'right'\n            },\n            onClick: () => addToCart(item.name, item.price, 1),\n            children: \"Add to Cart\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 6\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 4\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 5\n    }, this);\n  };\n\n  const CartDiv = ({\n    item\n  }) => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        justifyContent: 'space-between'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n        children: [/*#__PURE__*/_jsxDEV(MdDelete, {\n          onClick: () => deleteFromCart(item.name)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 5\n        }, this), item.name, \"(\", item.quantity, \")\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n        children: [\"Rs.\", item.price]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 5\n    }, this);\n  }; //renders food items grid and cart box in a flex display\n\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(CafeNav, {\n      id: id\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 7\n    }, this), foodItems.length == 0 && loading ? /*#__PURE__*/_jsxDEV(Spin, {\n      message: \"Loading Cafe Menu\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 39\n    }, this) : '', foodItems && loading ? /*#__PURE__*/_jsxDEV(Spin, {\n      message: \"Processing your payment\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 29\n    }, this) : '', /*#__PURE__*/_jsxDEV(Container, {\n      style: {\n        margin: '10px auto'\n      },\n      children: /*#__PURE__*/_jsxDEV(Row, {\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          xs: 8,\n          children: /*#__PURE__*/_jsxDEV(Row, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          xs: 4,\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n              children: /*#__PURE__*/_jsxDEV(\"h3\", {\n                style: {\n                  textAlign: 'center'\n                },\n                children: \"Cart\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 212,\n                columnNumber: 31\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 212,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n              children: /*#__PURE__*/_jsxDEV(Card.Text, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 214,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 213,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Card.Footer, {\n              children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                style: {\n                  display: 'flex',\n                  justifyContent: 'space-between'\n                },\n                children: [\"Total:\", /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: [\"Rs.\", total]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 226,\n                  columnNumber: 29\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 225,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 227,\n                columnNumber: 21\n              }, this), cart.length != 0 ? /*#__PURE__*/_jsxDEV(Button, {\n                onClick: clearCart,\n                children: \"Empty Cart\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 228,\n                columnNumber: 37\n              }, this) : '', /*#__PURE__*/_jsxDEV(\"div\", {\n                children: \"Pay using:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 229,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                style: {\n                  float: 'right'\n                },\n                onClick: pay,\n                disabled: cart.length == 0,\n                children: \"Proceed to Pay\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 234,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 224,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Cafepage, \"GGR6YCTdTQE4JlDhCBZSRpPVUjU=\", false, function () {\n  return [useParams];\n});\n\n_c = Cafepage;\nexport default Cafepage;\n\nvar _c;\n\n$RefreshReg$(_c, \"Cafepage\");","map":{"version":3,"sources":["/Users/sristichowdhury/Desktop/checking-1/client/src/components/Cafepage.jsx"],"names":["React","useEffect","useState","LoadingOverlay","Card","CardDeck","Col","Container","Row","Button","Spinner","MdDelete","CafeNav","useParams","Cafepage","id","cart","setCart","loading","setLoading","foodItems","setFoodItems","total","setTotal","fetch","method","then","res","json","items","catch","err","alert","addToCart","itemName","price","quantity","length","item","find","name","localStorage","setItem","JSON","stringify","Spin","message","Empty","deleteFromCart","newcart","filter","console","log","clearCart","pay","setTimeout","FoodGrid","marginBottom","image","display","justifyContent","color","float","CartDiv","margin","textAlign"],"mappings":"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","sourcesContent":["import React,{useEffect, useState} from \"react\";\nimport LoadingOverlay from 'react-loading-overlay';\nimport { Card, CardDeck, Col, Container,Row,Button, Spinner} from \"react-bootstrap\";\nimport {MdDelete} from 'react-icons/md';\n\nimport CafeNav from \"./CafeNav\";\nimport { useParams } from \"react-router-dom\";\n\nconst Cafepage = () => {\n\n\nconst {id}=useParams();\n\n  \nconst [cart,setCart]=useState([]);\nconst [loading,setLoading]=useState(true)\nconst [foodItems,setFoodItems]=useState('');\nconst [total,setTotal]=useState(0);\n\n\n  //calls the route on the backend which saves the food array to the database and returns the items.\n  useEffect(() => {\n    fetch(\"http://localhost:5000/cafe/foodList\",\n    {\n      method:'POST'\n    })\n    .then(res=>res.json())\n    .then(res=>{\n      setFoodItems(res.items);\n      //returned data is stored in foodItems\n      setLoading(false);\n    })\n    .catch(err=>alert(err))\n\n\n    // console.log(JSON.parse(localStorage.getItem('cart')));\n\n  }, [])\n\n\n\n//add to cart functionality is implemented\nconst addToCart = (itemName,price,quantity) =>\n{\n\n   //if cart is not empty then we check if the added item is already present in the cafe or not.\n   \n   if(cart.length!=0)\n   {\n      var item=cart.find(({ name }) => name === itemName)\n\n      //If present,we simply increase the quantity and add up the price\n      if(item) \n      {\n        item.quantity=item.quantity+1;\n        item.price=item.price+price;\n        setTotal(total+price)\n        setCart(cart)\n        \n      }\n      //else we create a new item and push it to the existing array\n      else \n      {\n        setCart([...cart,{name:itemName,price,quantity}])\n        setTotal(total+price);\n      }\n   }\n\n   //else we create a new item and push into the empty array\n   else\n   {\n    setCart([...cart,{name:itemName,price,quantity}])\n    setTotal(total+price);\n   }\n\n\n   localStorage.setItem('cart',JSON.stringify(cart))\n   \n}\n \n\n\n//loading spinner\nconst Spin = ({message}) =>\n{\n   return (\n      <LoadingOverlay\n      active={loading}\n      spinner\n      text={message}\n      >\n    </LoadingOverlay>\n   )\n}\n\n\n\n//renders UI when the cart is empty\nconst Empty = () =>\n{\n    return (\n      <div>\n<h4>Your Cart is Empty</h4>\n      </div>\n    )\n}\n\n\n//implemented the delete functionality using this function\nconst deleteFromCart = (itemName) =>\n{\n    var item=cart.find(({name})=>name===itemName)\n    var newcart=cart.filter(item=>item.name!=itemName);\n    console.log(newcart)\n    setTotal(total-item.price);\n    setCart(newcart);\n}\n\n\n\n\n//completely clears the cart if there are existing items\nconst clearCart = () =>\n{\n   setCart([]);\n   setTotal(0);\n}\n\n\n\n//This function starts a timer for an interval(takeaway time for the order)\nconst pay = () =>\n{\n   setLoading(true);\n   alert('Payment Processing!');\n   setTimeout(() => {\n     setLoading(false)\n     clearCart();\n\n     alert(\"Payment Completed...Enjoy your meal!\");\n   }, 3000);\n}\n\n\n\nconst FoodGrid = ({item}) =>\n{\n   return (\n    <Col xs={6}>\n    <Card style={{marginBottom:'20px'}}>\n   <Card.Img\n   className=\"cardImage\"\n     variant=\"top\"\n     src={item.image}\n   />\n   <Card.Body>\n     <Card.Title><h4>{item.name}</h4></Card.Title>\n     <Card.Text>\n       <h4 style={{display:'flex',justifyContent:'space-between'}}>\n         <h5 style={{color:'gray'}}>Price</h5>\n         <span>Rs.{item.price}</span></h4>\n     </Card.Text>\n   </Card.Body>\n   <Card.Footer>\n     <Button style={{float:'right'}}\n      onClick={()=>addToCart(item.name,item.price,1)}\n     >Add to Cart</Button>\n   </Card.Footer>\n </Card>\n</Col>\n   )\n}\n\n  \n\nconst CartDiv = ({item}) =>\n{\n   return (\n    <div  style={{display:'flex',justifyContent:'space-between'}}>\n    <h5>\n    <MdDelete onClick={()=>deleteFromCart(item.name)}/>\n    {item.name}({item.quantity})\n    </h5>\n    <h5>Rs.{item.price}</h5>\n    </div>\n\n   )\n}\n\n//renders food items grid and cart box in a flex display\n  return (\n    <>\n      <CafeNav id={id}/>\n\n      {foodItems.length==0 && loading?<Spin message=\"Loading Cafe Menu\"/>:''}\n      {foodItems && loading?<Spin message=\"Processing your payment\"/>:''}\n        <Container style={{margin:'10px auto'}}>\n          <Row>\n            <Col xs={8}>\n            <Row>\n              {/* {foodItems!='' && foodItems.map((item)=>\n                {\n                  return(\n                     <FoodGrid item={item}/>\n                  )\n                })} */}\n            \n              </Row>\n              </Col>\n              <Col xs={4}>\n                <Card>\n                  <Card.Title><h3 style={{textAlign:'center'}}>Cart</h3></Card.Title>\n                  <Card.Body>\n                  <Card.Text>\n                {/* {cart.length!=0 ? \n                cart.map((item)=>\n                {\n                   return (\n                     <CartDiv item={item}/>\n                   )\n                }):<Empty/>}    */}\n                  </Card.Text>\n                  </Card.Body>\n                  <Card.Footer>\n                    <h4 style={{display:'flex',justifyContent:'space-between'}}>\n                      Total:<span>Rs.{total}</span></h4>\n                    <br/>\n                    {cart.length!=0?<Button onClick={clearCart}>Empty Cart</Button>:''}\n                    <div>\n                      Pay using: \n                      {/* <input type=\"radio\" value=\"cash\">Cash</input>\n                      <input type=\"radio\" value=\"card\">Card</input> */}\n                    </div>\n                    <Button style={{float:'right'}}\n                    onClick={pay} disabled={cart.length==0}\n                    >Proceed to Pay</Button>\n                  </Card.Footer>\n                </Card>\n              </Col>\n          </Row>\n        </Container>\n    </>\n  );\n};\n\nexport default Cafepage;\n"]},"metadata":{},"sourceType":"module"}