{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/sristichowdhury/Desktop/projects/stack-hack/client/src/components/Cafe/Cafepage.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Container, Row } from \"react-bootstrap\";\nimport { useParams, useLocation } from \"react-router-dom\";\nimport Navbar from \"../Navbar/Navbar\";\nimport './cafeStyles.css';\nimport CafePageItem from \"./CafePageItem\";\nimport { connect } from 'react-redux';\n\nconst Cafepage = ({\n  addItemToCart\n}) => {\n  _s();\n\n  //get extra data passed from success page\n  const location = useLocation();\n  console.log(location);\n  const {\n    id\n  } = useParams();\n  const [loading, setLoading] = useState(true);\n  const [foodItems, setFoodItems] = useState(location.state ? location.state.items.items : []);\n  const [name, setName] = useState(location.state ? location.state.name.name : ''); //calls the route on the backend which saves the food array to the database and returns the items.\n  //add to cart functionality is implemented\n  // const addToCart = (itemName,price,quantity) =>\n  // {\n  //    //if cart is not empty then we check if the added item is already present in the cafe or not.\n  //    if(cart.length!=0)\n  //    {\n  //       var item=cart.find(({ name }) => name === itemName)\n  //       //If present,we simply increase the quantity and add up the price\n  //       if(item) \n  //       {\n  //         item.quantity+=1;\n  //         item.price+=price;\n  //         setTotal(total+price)\n  //         setCart(cart)\n  //       }\n  //       //else we create a new item and push it to the existing array\n  //       else \n  //       {\n  //         setCart([...cart,{name:itemName,price,quantity}])\n  //         setTotal(total+price);\n  //       }\n  //    }\n  //    //else we create a new item and push into the empty array\n  //    else\n  //    {\n  //     setCart([...cart,{name:itemName,price,quantity}])\n  //     setTotal(total+price);\n  //    }\n  //    localStorage.setItem('cart',JSON.stringify(cart))\n  // }\n\n  const addToCart = id => {\n    addItemToCart(id);\n  }; //implemented the delete functionality using this function\n  // const deleteFromCart = (itemName) =>\n  // {\n  //     var item=cart.find(({name})=>name===itemName)\n  //     var newcart=cart.filter(item=>item.name!=itemName);\n  //     console.log(newcart)\n  //     setTotal(total-item.price);\n  //     setCart(newcart);\n  // }\n  //completely clears the cart if there are existing items\n  // const clearCart = () =>\n  // {\n  //    setCart([]);\n  //    setTotal(0);\n  // }\n  //This function starts a timer for an interval(takeaway time for the order)\n  // const pay = () =>\n  // {\n  //    setLoading(true);\n  //    alert(`Payment Processing with ${paymentMode}!`);\n  //    setTimeout(() => {\n  //      setLoading(false)\n  //      clearCart();\n  //      alert(\"Payment Completed...Enjoy your meal!\");\n  //    }, 3000);\n  // }\n  //renders food items grid and cart box in a flex display\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"cafe-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"home-container\",\n      children: [/*#__PURE__*/_jsxDEV(Navbar, {\n        userId: id\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"banner\",\n        id: \"banner\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"cafe-content\",\n          children: foodItems.length == 0 && loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"spinner\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              class: \"spinner-grow text-info\",\n              role: \"status\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                class: \"sr-only\",\n                children: \"Loading...\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 128,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(\"b\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 129,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 129,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n                children: \"Loading...\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 130,\n                columnNumber: 13\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 13\n          }, this) : /*#__PURE__*/_jsxDEV(Container, {\n            style: {\n              margin: '10px auto'\n            },\n            children: /*#__PURE__*/_jsxDEV(Row, {\n              children: foodItems.map(item => {\n                return /*#__PURE__*/_jsxDEV(CafePageItem, {\n                  item: item,\n                  id: id,\n                  name: name,\n                  addToCart: addToCart\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 138,\n                  columnNumber: 24\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 134,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 118,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Cafepage, \"r8OFgY8wfxdGyk7ctH4OnnshpiQ=\", false, function () {\n  return [useLocation, useParams];\n});\n\n_c = Cafepage;\n\nconst mapStatetoProps = state => {\n  return {\n    items: state.menu\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    addItemToCart: id => {\n      dispatch({\n        type: \"ADD_TO_CART\",\n        payload: id\n      });\n    }\n  };\n};\n\nexport default connect(mapStatetoProps, mapDispatchToProps)(Cafepage);\n\nvar _c;\n\n$RefreshReg$(_c, \"Cafepage\");","map":{"version":3,"sources":["/Users/sristichowdhury/Desktop/projects/stack-hack/client/src/components/Cafe/Cafepage.jsx"],"names":["React","useState","Container","Row","useParams","useLocation","Navbar","CafePageItem","connect","Cafepage","addItemToCart","location","console","log","id","loading","setLoading","foodItems","setFoodItems","state","items","name","setName","addToCart","length","margin","map","item","mapStatetoProps","menu","mapDispatchToProps","dispatch","type","payload"],"mappings":"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","sourcesContent":["import React,{useState} from \"react\";\nimport { Container,Row} from \"react-bootstrap\";\nimport { useParams,useLocation } from \"react-router-dom\";\nimport Navbar from \"../Navbar/Navbar\"\nimport './cafeStyles.css'\nimport CafePageItem from \"./CafePageItem\";\nimport {connect} from 'react-redux'\n\n\n\nconst Cafepage = ({addItemToCart}) => {\n\n//get extra data passed from success page\nconst location = useLocation()\nconsole.log(location)\n\nconst {id}=useParams();\nconst [loading,setLoading]=useState(true)\nconst [foodItems,setFoodItems]=useState(location.state?location.state.items.items:[]);\nconst [name,setName]=useState(location.state?location.state.name.name:'')\n\n\n\n  //calls the route on the backend which saves the food array to the database and returns the items.\n \n//add to cart functionality is implemented\n// const addToCart = (itemName,price,quantity) =>\n// {\n\n//    //if cart is not empty then we check if the added item is already present in the cafe or not.\n   \n//    if(cart.length!=0)\n//    {\n//       var item=cart.find(({ name }) => name === itemName)\n\n//       //If present,we simply increase the quantity and add up the price\n//       if(item) \n//       {\n//         item.quantity+=1;\n//         item.price+=price;\n//         setTotal(total+price)\n//         setCart(cart)\n        \n//       }\n//       //else we create a new item and push it to the existing array\n//       else \n//       {\n//         setCart([...cart,{name:itemName,price,quantity}])\n//         setTotal(total+price);\n//       }\n//    }\n\n//    //else we create a new item and push into the empty array\n//    else\n//    {\n//     setCart([...cart,{name:itemName,price,quantity}])\n//     setTotal(total+price);\n//    }\n\n\n//    localStorage.setItem('cart',JSON.stringify(cart))\n   \n// }\n \n\n\nconst addToCart = (id) =>\n{\n  addItemToCart(id)\n}\n\n\n\n//implemented the delete functionality using this function\n// const deleteFromCart = (itemName) =>\n// {\n//     var item=cart.find(({name})=>name===itemName)\n//     var newcart=cart.filter(item=>item.name!=itemName);\n//     console.log(newcart)\n//     setTotal(total-item.price);\n//     setCart(newcart);\n// }\n\n\n\n\n//completely clears the cart if there are existing items\n// const clearCart = () =>\n// {\n//    setCart([]);\n//    setTotal(0);\n// }\n\n\n\n//This function starts a timer for an interval(takeaway time for the order)\n// const pay = () =>\n// {\n//    setLoading(true);\n//    alert(`Payment Processing with ${paymentMode}!`);\n//    setTimeout(() => {\n//      setLoading(false)\n//      clearCart();\n\n//      alert(\"Payment Completed...Enjoy your meal!\");\n//    }, 3000);\n// }\n\n\n\n  \n\n\n\n\n//renders food items grid and cart box in a flex display\n  return (\n    <div className=\"cafe-container\">\n      <div className=\"home-container\">\n        <Navbar userId={id}/>\n      {/* <CafeNav id={id}/> */}\n      <section className=\"banner\" id=\"banner\">\n        <div className=\"cafe-content\">\n      {foodItems.length==0 && loading?\n            <div className=\"spinner\">\n                <div class=\"spinner-grow text-info\" \n            role=\"status\">\n            <span class=\"sr-only\">Loading...</span>\n            <b/><br/>\n            <h4>Loading...</h4>\n          </div>\n            </div>:\n            <Container style={{margin:'10px auto'}}>\n            <Row>\n                {foodItems.map((item)=>\n                  {\n                    return(\n                       <CafePageItem item={item}\n                       id={id}\n                       name={name}\n                       addToCart={addToCart}\n                      />\n                    )\n                  })}\n              \n               \n            </Row>\n          </Container>}\n       \n        </div>\n        </section>\n        </div>\n    </div>\n  );\n};\n\n\n\n\n\nconst mapStatetoProps=(state)=>\n{\n\n  \n  return {\n    items: state.menu\n     }\n\n}\n\n\n\nconst mapDispatchToProps= (dispatch)=>{\n    \n  return{\n      addItemToCart: (id)=>{\n         dispatch({ \n        type: \"ADD_TO_CART\", \n        payload:id\n      });\n    }\n\n  }\n}\n\nexport default  connect(mapStatetoProps,mapDispatchToProps)(Cafepage)"]},"metadata":{},"sourceType":"module"}