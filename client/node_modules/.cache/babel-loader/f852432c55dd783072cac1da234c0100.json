{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/sristichowdhury/Desktop/projects/stack-hack/client/src/components/Cafepage.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport LoadingOverlay from 'react-loading-overlay';\nimport { Card, Col, Container, Row, Button } from \"react-bootstrap\";\nimport { MdDelete } from 'react-icons/md';\nimport CafeNav from \"./CafeNav\";\nimport { useParams, useLocation } from \"react-router-dom\";\nimport Navbar from \"./Navbar/Navbar\";\nimport './cafeStyles.css';\nimport CafePageItem from \"./CafePageItem\";\nimport { connect } from 'react-redux';\n\nconst Cafepage = () => {\n  _s();\n\n  //get extra data passed from success page\n  const location = useLocation();\n  const {\n    id\n  } = useParams(); //  console.log(id)\n\n  const [cart, setCart] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [foodItems, setFoodItems] = useState('');\n  const [total, setTotal] = useState(0);\n  const [paymentMode, setPaymentMode] = useState('cash'); //card states\n\n  const [cardname, setCardName] = useState('ABC');\n  const [expiry, setExpiry] = useState('12/24');\n  const [cvv, setCvv] = useState('033');\n  const [cardnumber, setCardNumber] = useState(''); //calls the route on the backend which saves the food array to the database and returns the items.\n\n  useEffect(() => {\n    console.log(items);\n    setFoodItems(items);\n  }, []); //add to cart functionality is implemented\n\n  const addToCart = (itemName, price, quantity) => {\n    //if cart is not empty then we check if the added item is already present in the cafe or not.\n    if (cart.length != 0) {\n      var item = cart.find(({\n        name\n      }) => name === itemName); //If present,we simply increase the quantity and add up the price\n\n      if (item) {\n        item.quantity += 1;\n        item.price += price;\n        setTotal(total + price);\n        setCart(cart);\n      } //else we create a new item and push it to the existing array\n      else {\n          setCart([...cart, {\n            name: itemName,\n            price,\n            quantity\n          }]);\n          setTotal(total + price);\n        }\n    } //else we create a new item and push into the empty array\n    else {\n        setCart([...cart, {\n          name: itemName,\n          price,\n          quantity\n        }]);\n        setTotal(total + price);\n      }\n\n    localStorage.setItem('cart', JSON.stringify(cart));\n  }; //loading spinner\n\n\n  const Spin = ({\n    message\n  }) => {\n    return /*#__PURE__*/_jsxDEV(LoadingOverlay, {\n      active: loading,\n      spinner: true,\n      text: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this);\n  }; //renders UI when the cart is empty\n\n\n  const Empty = () => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Your Cart is Empty\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 1\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }, this);\n  }; //implemented the delete functionality using this function\n\n\n  const deleteFromCart = itemName => {\n    var item = cart.find(({\n      name\n    }) => name === itemName);\n    var newcart = cart.filter(item => item.name != itemName);\n    console.log(newcart);\n    setTotal(total - item.price);\n    setCart(newcart);\n  }; //completely clears the cart if there are existing items\n\n\n  const clearCart = () => {\n    setCart([]);\n    setTotal(0);\n  }; //This function starts a timer for an interval(takeaway time for the order)\n\n\n  const pay = () => {\n    setLoading(true);\n    alert(`Payment Processing with ${paymentMode}!`);\n    setTimeout(() => {\n      setLoading(false);\n      clearCart();\n      alert(\"Payment Completed...Enjoy your meal!\");\n    }, 3000);\n  }; //displays cart Items by map over items in the cart\n\n\n  const CartDiv = ({\n    item\n  }) => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        justifyContent: 'space-between'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n        children: [/*#__PURE__*/_jsxDEV(MdDelete, {\n          onClick: () => deleteFromCart(item.name)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 5\n        }, this), item.name, \"(\", /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            color: 'gray',\n            fontSize: '15px'\n          },\n          children: \"qty:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 17\n        }, this), item.quantity, \")\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n        children: [\"Rs.\", item.price]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 5\n    }, this);\n  }; //renders food items grid and cart box in a flex display\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"cafe-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"home-container\",\n      children: [/*#__PURE__*/_jsxDEV(Navbar, {\n        userId: id\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"banner\",\n        id: \"banner\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"cafe-content\",\n          children: [foodItems.length == 0 && loading ? /*#__PURE__*/_jsxDEV(Spin, {\n            message: \"Loading Cafe Menu\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 39\n          }, this) : '', foodItems && loading ? /*#__PURE__*/_jsxDEV(Spin, {\n            message: \"Processing your payment\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 29\n          }, this) : '', /*#__PURE__*/_jsxDEV(Container, {\n            style: {\n              margin: '10px auto'\n            },\n            children: /*#__PURE__*/_jsxDEV(Row, {\n              children: foodItems != '' && foodItems.map(item => {\n                return /*#__PURE__*/_jsxDEV(CafePageItem, {\n                  item: item,\n                  addToCart: addToCart\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 194,\n                  columnNumber: 22\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 188,\n              columnNumber: 11\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 179,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Cafepage, \"43GbHOAssn6eCqNd44cmsOsZu3U=\", false, function () {\n  return [useLocation, useParams];\n});\n\n_c = Cafepage;\n\nconst mapStatetoProps = state => {\n  return {\n    items: state.cart\n  };\n}; // export default  connect(mapStatetoProps)(Cafepage)\n\n\nexport default Cafepage;\n\nvar _c;\n\n$RefreshReg$(_c, \"Cafepage\");","map":{"version":3,"sources":["/Users/sristichowdhury/Desktop/projects/stack-hack/client/src/components/Cafepage.jsx"],"names":["React","useEffect","useState","LoadingOverlay","Card","Col","Container","Row","Button","MdDelete","CafeNav","useParams","useLocation","Navbar","CafePageItem","connect","Cafepage","location","id","cart","setCart","loading","setLoading","foodItems","setFoodItems","total","setTotal","paymentMode","setPaymentMode","cardname","setCardName","expiry","setExpiry","cvv","setCvv","cardnumber","setCardNumber","console","log","items","addToCart","itemName","price","quantity","length","item","find","name","localStorage","setItem","JSON","stringify","Spin","message","Empty","deleteFromCart","newcart","filter","clearCart","pay","alert","setTimeout","CartDiv","display","justifyContent","color","fontSize","margin","map","mapStatetoProps","state"],"mappings":"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","sourcesContent":["import React,{useEffect, useState} from \"react\";\nimport LoadingOverlay from 'react-loading-overlay';\nimport { Card, Col, Container,Row,Button} from \"react-bootstrap\";\nimport {MdDelete} from 'react-icons/md';\nimport CafeNav from \"./CafeNav\";\nimport { useParams,useLocation } from \"react-router-dom\";\nimport Navbar from \"./Navbar/Navbar\";\nimport './cafeStyles.css'\nimport CafePageItem from \"./CafePageItem\";\nimport {connect} from 'react-redux'\n\n\n\nconst Cafepage = () => {\n\n//get extra data passed from success page\nconst location = useLocation()\n\n\n\n\nconst {id}=useParams();\n\n//  console.log(id)\n\nconst [cart,setCart]=useState([]);\nconst [loading,setLoading]=useState(true)\nconst [foodItems,setFoodItems]=useState('');\nconst [total,setTotal]=useState(0);\nconst [paymentMode,setPaymentMode]=useState('cash');\n\n\n//card states\nconst [cardname,setCardName]=useState('ABC');\nconst [expiry,setExpiry]=useState('12/24');\nconst [cvv,setCvv]=useState('033');\nconst [cardnumber,setCardNumber]=useState('');\n\n\n\n\n  //calls the route on the backend which saves the food array to the database and returns the items.\n  useEffect(() => {\n\n\n    console.log(items)\n    setFoodItems(items);\n\n\n  }, [])\n\n\n\n//add to cart functionality is implemented\nconst addToCart = (itemName,price,quantity) =>\n{\n\n   //if cart is not empty then we check if the added item is already present in the cafe or not.\n   \n   if(cart.length!=0)\n   {\n      var item=cart.find(({ name }) => name === itemName)\n\n      //If present,we simply increase the quantity and add up the price\n      if(item) \n      {\n        item.quantity+=1;\n        item.price+=price;\n        setTotal(total+price)\n        setCart(cart)\n        \n      }\n      //else we create a new item and push it to the existing array\n      else \n      {\n        setCart([...cart,{name:itemName,price,quantity}])\n        setTotal(total+price);\n      }\n   }\n\n   //else we create a new item and push into the empty array\n   else\n   {\n    setCart([...cart,{name:itemName,price,quantity}])\n    setTotal(total+price);\n   }\n\n\n   localStorage.setItem('cart',JSON.stringify(cart))\n   \n}\n \n\n\n//loading spinner\nconst Spin = ({message}) =>\n{\n   return (\n      <LoadingOverlay\n      active={loading}\n      spinner\n      text={message}\n      >\n    </LoadingOverlay>\n   )\n}\n\n\n\n//renders UI when the cart is empty\nconst Empty = () =>\n{\n    return (\n      <div>\n<h4>Your Cart is Empty</h4>\n      </div>\n    )\n}\n\n\n//implemented the delete functionality using this function\nconst deleteFromCart = (itemName) =>\n{\n    var item=cart.find(({name})=>name===itemName)\n    var newcart=cart.filter(item=>item.name!=itemName);\n    console.log(newcart)\n    setTotal(total-item.price);\n    setCart(newcart);\n}\n\n\n\n\n//completely clears the cart if there are existing items\nconst clearCart = () =>\n{\n   setCart([]);\n   setTotal(0);\n}\n\n\n\n//This function starts a timer for an interval(takeaway time for the order)\nconst pay = () =>\n{\n   setLoading(true);\n   alert(`Payment Processing with ${paymentMode}!`);\n   setTimeout(() => {\n     setLoading(false)\n     clearCart();\n\n     alert(\"Payment Completed...Enjoy your meal!\");\n   }, 3000);\n}\n\n\n\n  \n//displays cart Items by map over items in the cart\nconst CartDiv = ({item}) =>\n{\n   return (\n    <div  style={{display:'flex',justifyContent:'space-between'}}>\n    <h5>\n    <MdDelete onClick={()=>deleteFromCart(item.name)}/>\n    {item.name}(<span style={{color:'gray',fontSize:'15px'}}>qty:</span>{item.quantity})\n    </h5>\n    <h5>Rs.{item.price}</h5>\n    </div>\n\n   )\n}\n\n\n\n\n//renders food items grid and cart box in a flex display\n  return (\n    <div className=\"cafe-container\">\n      <div className=\"home-container\">\n        <Navbar userId={id}/>\n      {/* <CafeNav id={id}/> */}\n      <section className=\"banner\" id=\"banner\">\n        <div className=\"cafe-content\">\n      {foodItems.length==0 && loading?<Spin message=\"Loading Cafe Menu\"/>:''}\n      {foodItems && loading?<Spin message=\"Processing your payment\"/>:''}\n        <Container style={{margin:'10px auto'}}>\n          <Row>\n            {/* <Col xs={8}> */}\n            {/* <Row> */}\n              {foodItems!='' && foodItems.map((item)=>\n                {\n                  return(\n                     <CafePageItem item={item}\n                     addToCart={addToCart}\n                    />\n                  )\n                })}\n            \n              {/* </Row> */}\n              {/* </Col> */}\n              {/* <Col xs={4}>\n                <Card>\n                  <Card.Title><h3 style={{textAlign:'center'}}>Cart</h3></Card.Title>\n                  <Card.Body>\n                  <Card.Text>\n\n                {cart.length!=0 ? \n                cart.map((item)=>\n                {\n                   return (\n                     <CartDiv item={item}/>\n                   )\n                }):<Empty/>}   \n\n                  </Card.Text>\n                  </Card.Body>\n                  <Card.Footer>\n                    <h4 style={{display:'flex',justifyContent:'space-between'}}>\n                      Total:<span>Rs.{total}</span></h4>\n                    <br/>\n                    {cart.length!=0?\n                    <div  style={{display:'flex',justifyContent:'space-between'}}>\n                    Pay using: \n                    <div>\n                    <label style={{marginRight:'10px'}}>\n                      \n                      <input type=\"radio\" name=\"pay\" \n                                 value='cash'\n                                 checked={paymentMode=='cash'} \n                                 onChange={()=>setPaymentMode('cash')}/>\n                                 Cash</label>\n\n\n                    {/* <label>\n                      <input type=\"radio\" name=\"pay\" \n                                 value='card'\n                                 checked={paymentMode=='card'} \n                                 onChange={()=>setPaymentMode('card')}/>\n                                 Card</label> */}\n                    {/* </div>\n                  </div>\n                  :''}\n\n                  <br/>\n\n                \n                  {cart.length!=0?<Button onClick={clearCart}>Empty Cart</Button>:''}\n                  <Button style={{float:'right'}}\n                    onClick={pay} disabled={cart.length==0}\n                    >Proceed to Pay</Button>\n                  </Card.Footer>\n                </Card>\n              </Col> */}\n          </Row>\n        </Container>\n        </div>\n        </section>\n        </div>\n    </div>\n  );\n};\n\n\n\n\n\nconst mapStatetoProps=(state)=>\n{\n\n  \n  return {\n    items: state.cart\n     }\n\n}\n\n// export default  connect(mapStatetoProps)(Cafepage)\nexport default  (Cafepage)"]},"metadata":{},"sourceType":"module"}